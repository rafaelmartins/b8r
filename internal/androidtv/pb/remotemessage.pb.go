// remotemessage.proto

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: remotemessage.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RemoteKeyCode int32

const (
	RemoteKeyCode_KEYCODE_UNKNOWN                       RemoteKeyCode = 0
	RemoteKeyCode_KEYCODE_SOFT_LEFT                     RemoteKeyCode = 1
	RemoteKeyCode_KEYCODE_SOFT_RIGHT                    RemoteKeyCode = 2
	RemoteKeyCode_KEYCODE_HOME                          RemoteKeyCode = 3
	RemoteKeyCode_KEYCODE_BACK                          RemoteKeyCode = 4
	RemoteKeyCode_KEYCODE_CALL                          RemoteKeyCode = 5
	RemoteKeyCode_KEYCODE_ENDCALL                       RemoteKeyCode = 6
	RemoteKeyCode_KEYCODE_0                             RemoteKeyCode = 7
	RemoteKeyCode_KEYCODE_1                             RemoteKeyCode = 8
	RemoteKeyCode_KEYCODE_2                             RemoteKeyCode = 9
	RemoteKeyCode_KEYCODE_3                             RemoteKeyCode = 10
	RemoteKeyCode_KEYCODE_4                             RemoteKeyCode = 11
	RemoteKeyCode_KEYCODE_5                             RemoteKeyCode = 12
	RemoteKeyCode_KEYCODE_6                             RemoteKeyCode = 13
	RemoteKeyCode_KEYCODE_7                             RemoteKeyCode = 14
	RemoteKeyCode_KEYCODE_8                             RemoteKeyCode = 15
	RemoteKeyCode_KEYCODE_9                             RemoteKeyCode = 16
	RemoteKeyCode_KEYCODE_STAR                          RemoteKeyCode = 17
	RemoteKeyCode_KEYCODE_POUND                         RemoteKeyCode = 18
	RemoteKeyCode_KEYCODE_DPAD_UP                       RemoteKeyCode = 19
	RemoteKeyCode_KEYCODE_DPAD_DOWN                     RemoteKeyCode = 20
	RemoteKeyCode_KEYCODE_DPAD_LEFT                     RemoteKeyCode = 21
	RemoteKeyCode_KEYCODE_DPAD_RIGHT                    RemoteKeyCode = 22
	RemoteKeyCode_KEYCODE_DPAD_CENTER                   RemoteKeyCode = 23
	RemoteKeyCode_KEYCODE_VOLUME_UP                     RemoteKeyCode = 24
	RemoteKeyCode_KEYCODE_VOLUME_DOWN                   RemoteKeyCode = 25
	RemoteKeyCode_KEYCODE_POWER                         RemoteKeyCode = 26
	RemoteKeyCode_KEYCODE_CAMERA                        RemoteKeyCode = 27
	RemoteKeyCode_KEYCODE_CLEAR                         RemoteKeyCode = 28
	RemoteKeyCode_KEYCODE_A                             RemoteKeyCode = 29
	RemoteKeyCode_KEYCODE_B                             RemoteKeyCode = 30
	RemoteKeyCode_KEYCODE_C                             RemoteKeyCode = 31
	RemoteKeyCode_KEYCODE_D                             RemoteKeyCode = 32
	RemoteKeyCode_KEYCODE_E                             RemoteKeyCode = 33
	RemoteKeyCode_KEYCODE_F                             RemoteKeyCode = 34
	RemoteKeyCode_KEYCODE_G                             RemoteKeyCode = 35
	RemoteKeyCode_KEYCODE_H                             RemoteKeyCode = 36
	RemoteKeyCode_KEYCODE_I                             RemoteKeyCode = 37
	RemoteKeyCode_KEYCODE_J                             RemoteKeyCode = 38
	RemoteKeyCode_KEYCODE_K                             RemoteKeyCode = 39
	RemoteKeyCode_KEYCODE_L                             RemoteKeyCode = 40
	RemoteKeyCode_KEYCODE_M                             RemoteKeyCode = 41
	RemoteKeyCode_KEYCODE_N                             RemoteKeyCode = 42
	RemoteKeyCode_KEYCODE_O                             RemoteKeyCode = 43
	RemoteKeyCode_KEYCODE_P                             RemoteKeyCode = 44
	RemoteKeyCode_KEYCODE_Q                             RemoteKeyCode = 45
	RemoteKeyCode_KEYCODE_R                             RemoteKeyCode = 46
	RemoteKeyCode_KEYCODE_S                             RemoteKeyCode = 47
	RemoteKeyCode_KEYCODE_T                             RemoteKeyCode = 48
	RemoteKeyCode_KEYCODE_U                             RemoteKeyCode = 49
	RemoteKeyCode_KEYCODE_V                             RemoteKeyCode = 50
	RemoteKeyCode_KEYCODE_W                             RemoteKeyCode = 51
	RemoteKeyCode_KEYCODE_X                             RemoteKeyCode = 52
	RemoteKeyCode_KEYCODE_Y                             RemoteKeyCode = 53
	RemoteKeyCode_KEYCODE_Z                             RemoteKeyCode = 54
	RemoteKeyCode_KEYCODE_COMMA                         RemoteKeyCode = 55
	RemoteKeyCode_KEYCODE_PERIOD                        RemoteKeyCode = 56
	RemoteKeyCode_KEYCODE_ALT_LEFT                      RemoteKeyCode = 57
	RemoteKeyCode_KEYCODE_ALT_RIGHT                     RemoteKeyCode = 58
	RemoteKeyCode_KEYCODE_SHIFT_LEFT                    RemoteKeyCode = 59
	RemoteKeyCode_KEYCODE_SHIFT_RIGHT                   RemoteKeyCode = 60
	RemoteKeyCode_KEYCODE_TAB                           RemoteKeyCode = 61
	RemoteKeyCode_KEYCODE_SPACE                         RemoteKeyCode = 62
	RemoteKeyCode_KEYCODE_SYM                           RemoteKeyCode = 63
	RemoteKeyCode_KEYCODE_EXPLORER                      RemoteKeyCode = 64
	RemoteKeyCode_KEYCODE_ENVELOPE                      RemoteKeyCode = 65
	RemoteKeyCode_KEYCODE_ENTER                         RemoteKeyCode = 66
	RemoteKeyCode_KEYCODE_DEL                           RemoteKeyCode = 67
	RemoteKeyCode_KEYCODE_GRAVE                         RemoteKeyCode = 68
	RemoteKeyCode_KEYCODE_MINUS                         RemoteKeyCode = 69
	RemoteKeyCode_KEYCODE_EQUALS                        RemoteKeyCode = 70
	RemoteKeyCode_KEYCODE_LEFT_BRACKET                  RemoteKeyCode = 71
	RemoteKeyCode_KEYCODE_RIGHT_BRACKET                 RemoteKeyCode = 72
	RemoteKeyCode_KEYCODE_BACKSLASH                     RemoteKeyCode = 73
	RemoteKeyCode_KEYCODE_SEMICOLON                     RemoteKeyCode = 74
	RemoteKeyCode_KEYCODE_APOSTROPHE                    RemoteKeyCode = 75
	RemoteKeyCode_KEYCODE_SLASH                         RemoteKeyCode = 76
	RemoteKeyCode_KEYCODE_AT                            RemoteKeyCode = 77
	RemoteKeyCode_KEYCODE_NUM                           RemoteKeyCode = 78
	RemoteKeyCode_KEYCODE_HEADSETHOOK                   RemoteKeyCode = 79
	RemoteKeyCode_KEYCODE_FOCUS                         RemoteKeyCode = 80
	RemoteKeyCode_KEYCODE_PLUS                          RemoteKeyCode = 81
	RemoteKeyCode_KEYCODE_MENU                          RemoteKeyCode = 82
	RemoteKeyCode_KEYCODE_NOTIFICATION                  RemoteKeyCode = 83
	RemoteKeyCode_KEYCODE_SEARCH                        RemoteKeyCode = 84
	RemoteKeyCode_KEYCODE_MEDIA_PLAY_PAUSE              RemoteKeyCode = 85
	RemoteKeyCode_KEYCODE_MEDIA_STOP                    RemoteKeyCode = 86
	RemoteKeyCode_KEYCODE_MEDIA_NEXT                    RemoteKeyCode = 87
	RemoteKeyCode_KEYCODE_MEDIA_PREVIOUS                RemoteKeyCode = 88
	RemoteKeyCode_KEYCODE_MEDIA_REWIND                  RemoteKeyCode = 89
	RemoteKeyCode_KEYCODE_MEDIA_FAST_FORWARD            RemoteKeyCode = 90
	RemoteKeyCode_KEYCODE_MUTE                          RemoteKeyCode = 91
	RemoteKeyCode_KEYCODE_PAGE_UP                       RemoteKeyCode = 92
	RemoteKeyCode_KEYCODE_PAGE_DOWN                     RemoteKeyCode = 93
	RemoteKeyCode_KEYCODE_PICTSYMBOLS                   RemoteKeyCode = 94
	RemoteKeyCode_KEYCODE_SWITCH_CHARSET                RemoteKeyCode = 95
	RemoteKeyCode_KEYCODE_BUTTON_A                      RemoteKeyCode = 96
	RemoteKeyCode_KEYCODE_BUTTON_B                      RemoteKeyCode = 97
	RemoteKeyCode_KEYCODE_BUTTON_C                      RemoteKeyCode = 98
	RemoteKeyCode_KEYCODE_BUTTON_X                      RemoteKeyCode = 99
	RemoteKeyCode_KEYCODE_BUTTON_Y                      RemoteKeyCode = 100
	RemoteKeyCode_KEYCODE_BUTTON_Z                      RemoteKeyCode = 101
	RemoteKeyCode_KEYCODE_BUTTON_L1                     RemoteKeyCode = 102
	RemoteKeyCode_KEYCODE_BUTTON_R1                     RemoteKeyCode = 103
	RemoteKeyCode_KEYCODE_BUTTON_L2                     RemoteKeyCode = 104
	RemoteKeyCode_KEYCODE_BUTTON_R2                     RemoteKeyCode = 105
	RemoteKeyCode_KEYCODE_BUTTON_THUMBL                 RemoteKeyCode = 106
	RemoteKeyCode_KEYCODE_BUTTON_THUMBR                 RemoteKeyCode = 107
	RemoteKeyCode_KEYCODE_BUTTON_START                  RemoteKeyCode = 108
	RemoteKeyCode_KEYCODE_BUTTON_SELECT                 RemoteKeyCode = 109
	RemoteKeyCode_KEYCODE_BUTTON_MODE                   RemoteKeyCode = 110
	RemoteKeyCode_KEYCODE_ESCAPE                        RemoteKeyCode = 111
	RemoteKeyCode_KEYCODE_FORWARD_DEL                   RemoteKeyCode = 112
	RemoteKeyCode_KEYCODE_CTRL_LEFT                     RemoteKeyCode = 113
	RemoteKeyCode_KEYCODE_CTRL_RIGHT                    RemoteKeyCode = 114
	RemoteKeyCode_KEYCODE_CAPS_LOCK                     RemoteKeyCode = 115
	RemoteKeyCode_KEYCODE_SCROLL_LOCK                   RemoteKeyCode = 116
	RemoteKeyCode_KEYCODE_META_LEFT                     RemoteKeyCode = 117
	RemoteKeyCode_KEYCODE_META_RIGHT                    RemoteKeyCode = 118
	RemoteKeyCode_KEYCODE_FUNCTION                      RemoteKeyCode = 119
	RemoteKeyCode_KEYCODE_SYSRQ                         RemoteKeyCode = 120
	RemoteKeyCode_KEYCODE_BREAK                         RemoteKeyCode = 121
	RemoteKeyCode_KEYCODE_MOVE_HOME                     RemoteKeyCode = 122
	RemoteKeyCode_KEYCODE_MOVE_END                      RemoteKeyCode = 123
	RemoteKeyCode_KEYCODE_INSERT                        RemoteKeyCode = 124
	RemoteKeyCode_KEYCODE_FORWARD                       RemoteKeyCode = 125
	RemoteKeyCode_KEYCODE_MEDIA_PLAY                    RemoteKeyCode = 126
	RemoteKeyCode_KEYCODE_MEDIA_PAUSE                   RemoteKeyCode = 127
	RemoteKeyCode_KEYCODE_MEDIA_CLOSE                   RemoteKeyCode = 128
	RemoteKeyCode_KEYCODE_MEDIA_EJECT                   RemoteKeyCode = 129
	RemoteKeyCode_KEYCODE_MEDIA_RECORD                  RemoteKeyCode = 130
	RemoteKeyCode_KEYCODE_F1                            RemoteKeyCode = 131
	RemoteKeyCode_KEYCODE_F2                            RemoteKeyCode = 132
	RemoteKeyCode_KEYCODE_F3                            RemoteKeyCode = 133
	RemoteKeyCode_KEYCODE_F4                            RemoteKeyCode = 134
	RemoteKeyCode_KEYCODE_F5                            RemoteKeyCode = 135
	RemoteKeyCode_KEYCODE_F6                            RemoteKeyCode = 136
	RemoteKeyCode_KEYCODE_F7                            RemoteKeyCode = 137
	RemoteKeyCode_KEYCODE_F8                            RemoteKeyCode = 138
	RemoteKeyCode_KEYCODE_F9                            RemoteKeyCode = 139
	RemoteKeyCode_KEYCODE_F10                           RemoteKeyCode = 140
	RemoteKeyCode_KEYCODE_F11                           RemoteKeyCode = 141
	RemoteKeyCode_KEYCODE_F12                           RemoteKeyCode = 142
	RemoteKeyCode_KEYCODE_NUM_LOCK                      RemoteKeyCode = 143
	RemoteKeyCode_KEYCODE_NUMPAD_0                      RemoteKeyCode = 144
	RemoteKeyCode_KEYCODE_NUMPAD_1                      RemoteKeyCode = 145
	RemoteKeyCode_KEYCODE_NUMPAD_2                      RemoteKeyCode = 146
	RemoteKeyCode_KEYCODE_NUMPAD_3                      RemoteKeyCode = 147
	RemoteKeyCode_KEYCODE_NUMPAD_4                      RemoteKeyCode = 148
	RemoteKeyCode_KEYCODE_NUMPAD_5                      RemoteKeyCode = 149
	RemoteKeyCode_KEYCODE_NUMPAD_6                      RemoteKeyCode = 150
	RemoteKeyCode_KEYCODE_NUMPAD_7                      RemoteKeyCode = 151
	RemoteKeyCode_KEYCODE_NUMPAD_8                      RemoteKeyCode = 152
	RemoteKeyCode_KEYCODE_NUMPAD_9                      RemoteKeyCode = 153
	RemoteKeyCode_KEYCODE_NUMPAD_DIVIDE                 RemoteKeyCode = 154
	RemoteKeyCode_KEYCODE_NUMPAD_MULTIPLY               RemoteKeyCode = 155
	RemoteKeyCode_KEYCODE_NUMPAD_SUBTRACT               RemoteKeyCode = 156
	RemoteKeyCode_KEYCODE_NUMPAD_ADD                    RemoteKeyCode = 157
	RemoteKeyCode_KEYCODE_NUMPAD_DOT                    RemoteKeyCode = 158
	RemoteKeyCode_KEYCODE_NUMPAD_COMMA                  RemoteKeyCode = 159
	RemoteKeyCode_KEYCODE_NUMPAD_ENTER                  RemoteKeyCode = 160
	RemoteKeyCode_KEYCODE_NUMPAD_EQUALS                 RemoteKeyCode = 161
	RemoteKeyCode_KEYCODE_NUMPAD_LEFT_PAREN             RemoteKeyCode = 162
	RemoteKeyCode_KEYCODE_NUMPAD_RIGHT_PAREN            RemoteKeyCode = 163
	RemoteKeyCode_KEYCODE_VOLUME_MUTE                   RemoteKeyCode = 164
	RemoteKeyCode_KEYCODE_INFO                          RemoteKeyCode = 165
	RemoteKeyCode_KEYCODE_CHANNEL_UP                    RemoteKeyCode = 166
	RemoteKeyCode_KEYCODE_CHANNEL_DOWN                  RemoteKeyCode = 167
	RemoteKeyCode_KEYCODE_ZOOM_IN                       RemoteKeyCode = 168
	RemoteKeyCode_KEYCODE_ZOOM_OUT                      RemoteKeyCode = 169
	RemoteKeyCode_KEYCODE_TV                            RemoteKeyCode = 170
	RemoteKeyCode_KEYCODE_WINDOW                        RemoteKeyCode = 171
	RemoteKeyCode_KEYCODE_GUIDE                         RemoteKeyCode = 172
	RemoteKeyCode_KEYCODE_DVR                           RemoteKeyCode = 173
	RemoteKeyCode_KEYCODE_BOOKMARK                      RemoteKeyCode = 174
	RemoteKeyCode_KEYCODE_CAPTIONS                      RemoteKeyCode = 175
	RemoteKeyCode_KEYCODE_SETTINGS                      RemoteKeyCode = 176
	RemoteKeyCode_KEYCODE_TV_POWER                      RemoteKeyCode = 177
	RemoteKeyCode_KEYCODE_TV_INPUT                      RemoteKeyCode = 178
	RemoteKeyCode_KEYCODE_STB_POWER                     RemoteKeyCode = 179
	RemoteKeyCode_KEYCODE_STB_INPUT                     RemoteKeyCode = 180
	RemoteKeyCode_KEYCODE_AVR_POWER                     RemoteKeyCode = 181
	RemoteKeyCode_KEYCODE_AVR_INPUT                     RemoteKeyCode = 182
	RemoteKeyCode_KEYCODE_PROG_RED                      RemoteKeyCode = 183
	RemoteKeyCode_KEYCODE_PROG_GREEN                    RemoteKeyCode = 184
	RemoteKeyCode_KEYCODE_PROG_YELLOW                   RemoteKeyCode = 185
	RemoteKeyCode_KEYCODE_PROG_BLUE                     RemoteKeyCode = 186
	RemoteKeyCode_KEYCODE_APP_SWITCH                    RemoteKeyCode = 187
	RemoteKeyCode_KEYCODE_BUTTON_1                      RemoteKeyCode = 188
	RemoteKeyCode_KEYCODE_BUTTON_2                      RemoteKeyCode = 189
	RemoteKeyCode_KEYCODE_BUTTON_3                      RemoteKeyCode = 190
	RemoteKeyCode_KEYCODE_BUTTON_4                      RemoteKeyCode = 191
	RemoteKeyCode_KEYCODE_BUTTON_5                      RemoteKeyCode = 192
	RemoteKeyCode_KEYCODE_BUTTON_6                      RemoteKeyCode = 193
	RemoteKeyCode_KEYCODE_BUTTON_7                      RemoteKeyCode = 194
	RemoteKeyCode_KEYCODE_BUTTON_8                      RemoteKeyCode = 195
	RemoteKeyCode_KEYCODE_BUTTON_9                      RemoteKeyCode = 196
	RemoteKeyCode_KEYCODE_BUTTON_10                     RemoteKeyCode = 197
	RemoteKeyCode_KEYCODE_BUTTON_11                     RemoteKeyCode = 198
	RemoteKeyCode_KEYCODE_BUTTON_12                     RemoteKeyCode = 199
	RemoteKeyCode_KEYCODE_BUTTON_13                     RemoteKeyCode = 200
	RemoteKeyCode_KEYCODE_BUTTON_14                     RemoteKeyCode = 201
	RemoteKeyCode_KEYCODE_BUTTON_15                     RemoteKeyCode = 202
	RemoteKeyCode_KEYCODE_BUTTON_16                     RemoteKeyCode = 203
	RemoteKeyCode_KEYCODE_LANGUAGE_SWITCH               RemoteKeyCode = 204
	RemoteKeyCode_KEYCODE_MANNER_MODE                   RemoteKeyCode = 205
	RemoteKeyCode_KEYCODE_3D_MODE                       RemoteKeyCode = 206
	RemoteKeyCode_KEYCODE_CONTACTS                      RemoteKeyCode = 207
	RemoteKeyCode_KEYCODE_CALENDAR                      RemoteKeyCode = 208
	RemoteKeyCode_KEYCODE_MUSIC                         RemoteKeyCode = 209
	RemoteKeyCode_KEYCODE_CALCULATOR                    RemoteKeyCode = 210
	RemoteKeyCode_KEYCODE_ZENKAKU_HANKAKU               RemoteKeyCode = 211
	RemoteKeyCode_KEYCODE_EISU                          RemoteKeyCode = 212
	RemoteKeyCode_KEYCODE_MUHENKAN                      RemoteKeyCode = 213
	RemoteKeyCode_KEYCODE_HENKAN                        RemoteKeyCode = 214
	RemoteKeyCode_KEYCODE_KATAKANA_HIRAGANA             RemoteKeyCode = 215
	RemoteKeyCode_KEYCODE_YEN                           RemoteKeyCode = 216
	RemoteKeyCode_KEYCODE_RO                            RemoteKeyCode = 217
	RemoteKeyCode_KEYCODE_KANA                          RemoteKeyCode = 218
	RemoteKeyCode_KEYCODE_ASSIST                        RemoteKeyCode = 219
	RemoteKeyCode_KEYCODE_BRIGHTNESS_DOWN               RemoteKeyCode = 220
	RemoteKeyCode_KEYCODE_BRIGHTNESS_UP                 RemoteKeyCode = 221
	RemoteKeyCode_KEYCODE_MEDIA_AUDIO_TRACK             RemoteKeyCode = 222
	RemoteKeyCode_KEYCODE_SLEEP                         RemoteKeyCode = 223
	RemoteKeyCode_KEYCODE_WAKEUP                        RemoteKeyCode = 224
	RemoteKeyCode_KEYCODE_PAIRING                       RemoteKeyCode = 225
	RemoteKeyCode_KEYCODE_MEDIA_TOP_MENU                RemoteKeyCode = 226
	RemoteKeyCode_KEYCODE_11                            RemoteKeyCode = 227
	RemoteKeyCode_KEYCODE_12                            RemoteKeyCode = 228
	RemoteKeyCode_KEYCODE_LAST_CHANNEL                  RemoteKeyCode = 229
	RemoteKeyCode_KEYCODE_TV_DATA_SERVICE               RemoteKeyCode = 230
	RemoteKeyCode_KEYCODE_VOICE_ASSIST                  RemoteKeyCode = 231
	RemoteKeyCode_KEYCODE_TV_RADIO_SERVICE              RemoteKeyCode = 232
	RemoteKeyCode_KEYCODE_TV_TELETEXT                   RemoteKeyCode = 233
	RemoteKeyCode_KEYCODE_TV_NUMBER_ENTRY               RemoteKeyCode = 234
	RemoteKeyCode_KEYCODE_TV_TERRESTRIAL_ANALOG         RemoteKeyCode = 235
	RemoteKeyCode_KEYCODE_TV_TERRESTRIAL_DIGITAL        RemoteKeyCode = 236
	RemoteKeyCode_KEYCODE_TV_SATELLITE                  RemoteKeyCode = 237
	RemoteKeyCode_KEYCODE_TV_SATELLITE_BS               RemoteKeyCode = 238
	RemoteKeyCode_KEYCODE_TV_SATELLITE_CS               RemoteKeyCode = 239
	RemoteKeyCode_KEYCODE_TV_SATELLITE_SERVICE          RemoteKeyCode = 240
	RemoteKeyCode_KEYCODE_TV_NETWORK                    RemoteKeyCode = 241
	RemoteKeyCode_KEYCODE_TV_ANTENNA_CABLE              RemoteKeyCode = 242
	RemoteKeyCode_KEYCODE_TV_INPUT_HDMI_1               RemoteKeyCode = 243
	RemoteKeyCode_KEYCODE_TV_INPUT_HDMI_2               RemoteKeyCode = 244
	RemoteKeyCode_KEYCODE_TV_INPUT_HDMI_3               RemoteKeyCode = 245
	RemoteKeyCode_KEYCODE_TV_INPUT_HDMI_4               RemoteKeyCode = 246
	RemoteKeyCode_KEYCODE_TV_INPUT_COMPOSITE_1          RemoteKeyCode = 247
	RemoteKeyCode_KEYCODE_TV_INPUT_COMPOSITE_2          RemoteKeyCode = 248
	RemoteKeyCode_KEYCODE_TV_INPUT_COMPONENT_1          RemoteKeyCode = 249
	RemoteKeyCode_KEYCODE_TV_INPUT_COMPONENT_2          RemoteKeyCode = 250
	RemoteKeyCode_KEYCODE_TV_INPUT_VGA_1                RemoteKeyCode = 251
	RemoteKeyCode_KEYCODE_TV_AUDIO_DESCRIPTION          RemoteKeyCode = 252
	RemoteKeyCode_KEYCODE_TV_AUDIO_DESCRIPTION_MIX_UP   RemoteKeyCode = 253
	RemoteKeyCode_KEYCODE_TV_AUDIO_DESCRIPTION_MIX_DOWN RemoteKeyCode = 254
	RemoteKeyCode_KEYCODE_TV_ZOOM_MODE                  RemoteKeyCode = 255
	RemoteKeyCode_KEYCODE_TV_CONTENTS_MENU              RemoteKeyCode = 256
	RemoteKeyCode_KEYCODE_TV_MEDIA_CONTEXT_MENU         RemoteKeyCode = 257
	RemoteKeyCode_KEYCODE_TV_TIMER_PROGRAMMING          RemoteKeyCode = 258
	RemoteKeyCode_KEYCODE_HELP                          RemoteKeyCode = 259
	RemoteKeyCode_KEYCODE_NAVIGATE_PREVIOUS             RemoteKeyCode = 260
	RemoteKeyCode_KEYCODE_NAVIGATE_NEXT                 RemoteKeyCode = 261
	RemoteKeyCode_KEYCODE_NAVIGATE_IN                   RemoteKeyCode = 262
	RemoteKeyCode_KEYCODE_NAVIGATE_OUT                  RemoteKeyCode = 263
	RemoteKeyCode_KEYCODE_STEM_PRIMARY                  RemoteKeyCode = 264
	RemoteKeyCode_KEYCODE_STEM_1                        RemoteKeyCode = 265
	RemoteKeyCode_KEYCODE_STEM_2                        RemoteKeyCode = 266
	RemoteKeyCode_KEYCODE_STEM_3                        RemoteKeyCode = 267
	RemoteKeyCode_KEYCODE_DPAD_UP_LEFT                  RemoteKeyCode = 268
	RemoteKeyCode_KEYCODE_DPAD_DOWN_LEFT                RemoteKeyCode = 269
	RemoteKeyCode_KEYCODE_DPAD_UP_RIGHT                 RemoteKeyCode = 270
	RemoteKeyCode_KEYCODE_DPAD_DOWN_RIGHT               RemoteKeyCode = 271
	RemoteKeyCode_KEYCODE_MEDIA_SKIP_FORWARD            RemoteKeyCode = 272
	RemoteKeyCode_KEYCODE_MEDIA_SKIP_BACKWARD           RemoteKeyCode = 273
	RemoteKeyCode_KEYCODE_MEDIA_STEP_FORWARD            RemoteKeyCode = 274
	RemoteKeyCode_KEYCODE_MEDIA_STEP_BACKWARD           RemoteKeyCode = 275
	RemoteKeyCode_KEYCODE_SOFT_SLEEP                    RemoteKeyCode = 276
	RemoteKeyCode_KEYCODE_CUT                           RemoteKeyCode = 277
	RemoteKeyCode_KEYCODE_COPY                          RemoteKeyCode = 278
	RemoteKeyCode_KEYCODE_PASTE                         RemoteKeyCode = 279
	RemoteKeyCode_KEYCODE_SYSTEM_NAVIGATION_UP          RemoteKeyCode = 280
	RemoteKeyCode_KEYCODE_SYSTEM_NAVIGATION_DOWN        RemoteKeyCode = 281
	RemoteKeyCode_KEYCODE_SYSTEM_NAVIGATION_LEFT        RemoteKeyCode = 282
	RemoteKeyCode_KEYCODE_SYSTEM_NAVIGATION_RIGHT       RemoteKeyCode = 283
	RemoteKeyCode_KEYCODE_ALL_APPS                      RemoteKeyCode = 284
	RemoteKeyCode_KEYCODE_REFRESH                       RemoteKeyCode = 285
	RemoteKeyCode_KEYCODE_THUMBS_UP                     RemoteKeyCode = 286
	RemoteKeyCode_KEYCODE_THUMBS_DOWN                   RemoteKeyCode = 287
	RemoteKeyCode_KEYCODE_PROFILE_SWITCH                RemoteKeyCode = 288
	RemoteKeyCode_KEYCODE_VIDEO_APP_1                   RemoteKeyCode = 289
	RemoteKeyCode_KEYCODE_VIDEO_APP_2                   RemoteKeyCode = 290
	RemoteKeyCode_KEYCODE_VIDEO_APP_3                   RemoteKeyCode = 291
	RemoteKeyCode_KEYCODE_VIDEO_APP_4                   RemoteKeyCode = 292
	RemoteKeyCode_KEYCODE_VIDEO_APP_5                   RemoteKeyCode = 293
	RemoteKeyCode_KEYCODE_VIDEO_APP_6                   RemoteKeyCode = 294
	RemoteKeyCode_KEYCODE_VIDEO_APP_7                   RemoteKeyCode = 295
	RemoteKeyCode_KEYCODE_VIDEO_APP_8                   RemoteKeyCode = 296
	RemoteKeyCode_KEYCODE_FEATURED_APP_1                RemoteKeyCode = 297
	RemoteKeyCode_KEYCODE_FEATURED_APP_2                RemoteKeyCode = 298
	RemoteKeyCode_KEYCODE_FEATURED_APP_3                RemoteKeyCode = 299
	RemoteKeyCode_KEYCODE_FEATURED_APP_4                RemoteKeyCode = 300
	RemoteKeyCode_KEYCODE_DEMO_APP_1                    RemoteKeyCode = 301
	RemoteKeyCode_KEYCODE_DEMO_APP_2                    RemoteKeyCode = 302
	RemoteKeyCode_KEYCODE_DEMO_APP_3                    RemoteKeyCode = 303
	RemoteKeyCode_KEYCODE_DEMO_APP_4                    RemoteKeyCode = 304
)

// Enum value maps for RemoteKeyCode.
var (
	RemoteKeyCode_name = map[int32]string{
		0:   "KEYCODE_UNKNOWN",
		1:   "KEYCODE_SOFT_LEFT",
		2:   "KEYCODE_SOFT_RIGHT",
		3:   "KEYCODE_HOME",
		4:   "KEYCODE_BACK",
		5:   "KEYCODE_CALL",
		6:   "KEYCODE_ENDCALL",
		7:   "KEYCODE_0",
		8:   "KEYCODE_1",
		9:   "KEYCODE_2",
		10:  "KEYCODE_3",
		11:  "KEYCODE_4",
		12:  "KEYCODE_5",
		13:  "KEYCODE_6",
		14:  "KEYCODE_7",
		15:  "KEYCODE_8",
		16:  "KEYCODE_9",
		17:  "KEYCODE_STAR",
		18:  "KEYCODE_POUND",
		19:  "KEYCODE_DPAD_UP",
		20:  "KEYCODE_DPAD_DOWN",
		21:  "KEYCODE_DPAD_LEFT",
		22:  "KEYCODE_DPAD_RIGHT",
		23:  "KEYCODE_DPAD_CENTER",
		24:  "KEYCODE_VOLUME_UP",
		25:  "KEYCODE_VOLUME_DOWN",
		26:  "KEYCODE_POWER",
		27:  "KEYCODE_CAMERA",
		28:  "KEYCODE_CLEAR",
		29:  "KEYCODE_A",
		30:  "KEYCODE_B",
		31:  "KEYCODE_C",
		32:  "KEYCODE_D",
		33:  "KEYCODE_E",
		34:  "KEYCODE_F",
		35:  "KEYCODE_G",
		36:  "KEYCODE_H",
		37:  "KEYCODE_I",
		38:  "KEYCODE_J",
		39:  "KEYCODE_K",
		40:  "KEYCODE_L",
		41:  "KEYCODE_M",
		42:  "KEYCODE_N",
		43:  "KEYCODE_O",
		44:  "KEYCODE_P",
		45:  "KEYCODE_Q",
		46:  "KEYCODE_R",
		47:  "KEYCODE_S",
		48:  "KEYCODE_T",
		49:  "KEYCODE_U",
		50:  "KEYCODE_V",
		51:  "KEYCODE_W",
		52:  "KEYCODE_X",
		53:  "KEYCODE_Y",
		54:  "KEYCODE_Z",
		55:  "KEYCODE_COMMA",
		56:  "KEYCODE_PERIOD",
		57:  "KEYCODE_ALT_LEFT",
		58:  "KEYCODE_ALT_RIGHT",
		59:  "KEYCODE_SHIFT_LEFT",
		60:  "KEYCODE_SHIFT_RIGHT",
		61:  "KEYCODE_TAB",
		62:  "KEYCODE_SPACE",
		63:  "KEYCODE_SYM",
		64:  "KEYCODE_EXPLORER",
		65:  "KEYCODE_ENVELOPE",
		66:  "KEYCODE_ENTER",
		67:  "KEYCODE_DEL",
		68:  "KEYCODE_GRAVE",
		69:  "KEYCODE_MINUS",
		70:  "KEYCODE_EQUALS",
		71:  "KEYCODE_LEFT_BRACKET",
		72:  "KEYCODE_RIGHT_BRACKET",
		73:  "KEYCODE_BACKSLASH",
		74:  "KEYCODE_SEMICOLON",
		75:  "KEYCODE_APOSTROPHE",
		76:  "KEYCODE_SLASH",
		77:  "KEYCODE_AT",
		78:  "KEYCODE_NUM",
		79:  "KEYCODE_HEADSETHOOK",
		80:  "KEYCODE_FOCUS",
		81:  "KEYCODE_PLUS",
		82:  "KEYCODE_MENU",
		83:  "KEYCODE_NOTIFICATION",
		84:  "KEYCODE_SEARCH",
		85:  "KEYCODE_MEDIA_PLAY_PAUSE",
		86:  "KEYCODE_MEDIA_STOP",
		87:  "KEYCODE_MEDIA_NEXT",
		88:  "KEYCODE_MEDIA_PREVIOUS",
		89:  "KEYCODE_MEDIA_REWIND",
		90:  "KEYCODE_MEDIA_FAST_FORWARD",
		91:  "KEYCODE_MUTE",
		92:  "KEYCODE_PAGE_UP",
		93:  "KEYCODE_PAGE_DOWN",
		94:  "KEYCODE_PICTSYMBOLS",
		95:  "KEYCODE_SWITCH_CHARSET",
		96:  "KEYCODE_BUTTON_A",
		97:  "KEYCODE_BUTTON_B",
		98:  "KEYCODE_BUTTON_C",
		99:  "KEYCODE_BUTTON_X",
		100: "KEYCODE_BUTTON_Y",
		101: "KEYCODE_BUTTON_Z",
		102: "KEYCODE_BUTTON_L1",
		103: "KEYCODE_BUTTON_R1",
		104: "KEYCODE_BUTTON_L2",
		105: "KEYCODE_BUTTON_R2",
		106: "KEYCODE_BUTTON_THUMBL",
		107: "KEYCODE_BUTTON_THUMBR",
		108: "KEYCODE_BUTTON_START",
		109: "KEYCODE_BUTTON_SELECT",
		110: "KEYCODE_BUTTON_MODE",
		111: "KEYCODE_ESCAPE",
		112: "KEYCODE_FORWARD_DEL",
		113: "KEYCODE_CTRL_LEFT",
		114: "KEYCODE_CTRL_RIGHT",
		115: "KEYCODE_CAPS_LOCK",
		116: "KEYCODE_SCROLL_LOCK",
		117: "KEYCODE_META_LEFT",
		118: "KEYCODE_META_RIGHT",
		119: "KEYCODE_FUNCTION",
		120: "KEYCODE_SYSRQ",
		121: "KEYCODE_BREAK",
		122: "KEYCODE_MOVE_HOME",
		123: "KEYCODE_MOVE_END",
		124: "KEYCODE_INSERT",
		125: "KEYCODE_FORWARD",
		126: "KEYCODE_MEDIA_PLAY",
		127: "KEYCODE_MEDIA_PAUSE",
		128: "KEYCODE_MEDIA_CLOSE",
		129: "KEYCODE_MEDIA_EJECT",
		130: "KEYCODE_MEDIA_RECORD",
		131: "KEYCODE_F1",
		132: "KEYCODE_F2",
		133: "KEYCODE_F3",
		134: "KEYCODE_F4",
		135: "KEYCODE_F5",
		136: "KEYCODE_F6",
		137: "KEYCODE_F7",
		138: "KEYCODE_F8",
		139: "KEYCODE_F9",
		140: "KEYCODE_F10",
		141: "KEYCODE_F11",
		142: "KEYCODE_F12",
		143: "KEYCODE_NUM_LOCK",
		144: "KEYCODE_NUMPAD_0",
		145: "KEYCODE_NUMPAD_1",
		146: "KEYCODE_NUMPAD_2",
		147: "KEYCODE_NUMPAD_3",
		148: "KEYCODE_NUMPAD_4",
		149: "KEYCODE_NUMPAD_5",
		150: "KEYCODE_NUMPAD_6",
		151: "KEYCODE_NUMPAD_7",
		152: "KEYCODE_NUMPAD_8",
		153: "KEYCODE_NUMPAD_9",
		154: "KEYCODE_NUMPAD_DIVIDE",
		155: "KEYCODE_NUMPAD_MULTIPLY",
		156: "KEYCODE_NUMPAD_SUBTRACT",
		157: "KEYCODE_NUMPAD_ADD",
		158: "KEYCODE_NUMPAD_DOT",
		159: "KEYCODE_NUMPAD_COMMA",
		160: "KEYCODE_NUMPAD_ENTER",
		161: "KEYCODE_NUMPAD_EQUALS",
		162: "KEYCODE_NUMPAD_LEFT_PAREN",
		163: "KEYCODE_NUMPAD_RIGHT_PAREN",
		164: "KEYCODE_VOLUME_MUTE",
		165: "KEYCODE_INFO",
		166: "KEYCODE_CHANNEL_UP",
		167: "KEYCODE_CHANNEL_DOWN",
		168: "KEYCODE_ZOOM_IN",
		169: "KEYCODE_ZOOM_OUT",
		170: "KEYCODE_TV",
		171: "KEYCODE_WINDOW",
		172: "KEYCODE_GUIDE",
		173: "KEYCODE_DVR",
		174: "KEYCODE_BOOKMARK",
		175: "KEYCODE_CAPTIONS",
		176: "KEYCODE_SETTINGS",
		177: "KEYCODE_TV_POWER",
		178: "KEYCODE_TV_INPUT",
		179: "KEYCODE_STB_POWER",
		180: "KEYCODE_STB_INPUT",
		181: "KEYCODE_AVR_POWER",
		182: "KEYCODE_AVR_INPUT",
		183: "KEYCODE_PROG_RED",
		184: "KEYCODE_PROG_GREEN",
		185: "KEYCODE_PROG_YELLOW",
		186: "KEYCODE_PROG_BLUE",
		187: "KEYCODE_APP_SWITCH",
		188: "KEYCODE_BUTTON_1",
		189: "KEYCODE_BUTTON_2",
		190: "KEYCODE_BUTTON_3",
		191: "KEYCODE_BUTTON_4",
		192: "KEYCODE_BUTTON_5",
		193: "KEYCODE_BUTTON_6",
		194: "KEYCODE_BUTTON_7",
		195: "KEYCODE_BUTTON_8",
		196: "KEYCODE_BUTTON_9",
		197: "KEYCODE_BUTTON_10",
		198: "KEYCODE_BUTTON_11",
		199: "KEYCODE_BUTTON_12",
		200: "KEYCODE_BUTTON_13",
		201: "KEYCODE_BUTTON_14",
		202: "KEYCODE_BUTTON_15",
		203: "KEYCODE_BUTTON_16",
		204: "KEYCODE_LANGUAGE_SWITCH",
		205: "KEYCODE_MANNER_MODE",
		206: "KEYCODE_3D_MODE",
		207: "KEYCODE_CONTACTS",
		208: "KEYCODE_CALENDAR",
		209: "KEYCODE_MUSIC",
		210: "KEYCODE_CALCULATOR",
		211: "KEYCODE_ZENKAKU_HANKAKU",
		212: "KEYCODE_EISU",
		213: "KEYCODE_MUHENKAN",
		214: "KEYCODE_HENKAN",
		215: "KEYCODE_KATAKANA_HIRAGANA",
		216: "KEYCODE_YEN",
		217: "KEYCODE_RO",
		218: "KEYCODE_KANA",
		219: "KEYCODE_ASSIST",
		220: "KEYCODE_BRIGHTNESS_DOWN",
		221: "KEYCODE_BRIGHTNESS_UP",
		222: "KEYCODE_MEDIA_AUDIO_TRACK",
		223: "KEYCODE_SLEEP",
		224: "KEYCODE_WAKEUP",
		225: "KEYCODE_PAIRING",
		226: "KEYCODE_MEDIA_TOP_MENU",
		227: "KEYCODE_11",
		228: "KEYCODE_12",
		229: "KEYCODE_LAST_CHANNEL",
		230: "KEYCODE_TV_DATA_SERVICE",
		231: "KEYCODE_VOICE_ASSIST",
		232: "KEYCODE_TV_RADIO_SERVICE",
		233: "KEYCODE_TV_TELETEXT",
		234: "KEYCODE_TV_NUMBER_ENTRY",
		235: "KEYCODE_TV_TERRESTRIAL_ANALOG",
		236: "KEYCODE_TV_TERRESTRIAL_DIGITAL",
		237: "KEYCODE_TV_SATELLITE",
		238: "KEYCODE_TV_SATELLITE_BS",
		239: "KEYCODE_TV_SATELLITE_CS",
		240: "KEYCODE_TV_SATELLITE_SERVICE",
		241: "KEYCODE_TV_NETWORK",
		242: "KEYCODE_TV_ANTENNA_CABLE",
		243: "KEYCODE_TV_INPUT_HDMI_1",
		244: "KEYCODE_TV_INPUT_HDMI_2",
		245: "KEYCODE_TV_INPUT_HDMI_3",
		246: "KEYCODE_TV_INPUT_HDMI_4",
		247: "KEYCODE_TV_INPUT_COMPOSITE_1",
		248: "KEYCODE_TV_INPUT_COMPOSITE_2",
		249: "KEYCODE_TV_INPUT_COMPONENT_1",
		250: "KEYCODE_TV_INPUT_COMPONENT_2",
		251: "KEYCODE_TV_INPUT_VGA_1",
		252: "KEYCODE_TV_AUDIO_DESCRIPTION",
		253: "KEYCODE_TV_AUDIO_DESCRIPTION_MIX_UP",
		254: "KEYCODE_TV_AUDIO_DESCRIPTION_MIX_DOWN",
		255: "KEYCODE_TV_ZOOM_MODE",
		256: "KEYCODE_TV_CONTENTS_MENU",
		257: "KEYCODE_TV_MEDIA_CONTEXT_MENU",
		258: "KEYCODE_TV_TIMER_PROGRAMMING",
		259: "KEYCODE_HELP",
		260: "KEYCODE_NAVIGATE_PREVIOUS",
		261: "KEYCODE_NAVIGATE_NEXT",
		262: "KEYCODE_NAVIGATE_IN",
		263: "KEYCODE_NAVIGATE_OUT",
		264: "KEYCODE_STEM_PRIMARY",
		265: "KEYCODE_STEM_1",
		266: "KEYCODE_STEM_2",
		267: "KEYCODE_STEM_3",
		268: "KEYCODE_DPAD_UP_LEFT",
		269: "KEYCODE_DPAD_DOWN_LEFT",
		270: "KEYCODE_DPAD_UP_RIGHT",
		271: "KEYCODE_DPAD_DOWN_RIGHT",
		272: "KEYCODE_MEDIA_SKIP_FORWARD",
		273: "KEYCODE_MEDIA_SKIP_BACKWARD",
		274: "KEYCODE_MEDIA_STEP_FORWARD",
		275: "KEYCODE_MEDIA_STEP_BACKWARD",
		276: "KEYCODE_SOFT_SLEEP",
		277: "KEYCODE_CUT",
		278: "KEYCODE_COPY",
		279: "KEYCODE_PASTE",
		280: "KEYCODE_SYSTEM_NAVIGATION_UP",
		281: "KEYCODE_SYSTEM_NAVIGATION_DOWN",
		282: "KEYCODE_SYSTEM_NAVIGATION_LEFT",
		283: "KEYCODE_SYSTEM_NAVIGATION_RIGHT",
		284: "KEYCODE_ALL_APPS",
		285: "KEYCODE_REFRESH",
		286: "KEYCODE_THUMBS_UP",
		287: "KEYCODE_THUMBS_DOWN",
		288: "KEYCODE_PROFILE_SWITCH",
		289: "KEYCODE_VIDEO_APP_1",
		290: "KEYCODE_VIDEO_APP_2",
		291: "KEYCODE_VIDEO_APP_3",
		292: "KEYCODE_VIDEO_APP_4",
		293: "KEYCODE_VIDEO_APP_5",
		294: "KEYCODE_VIDEO_APP_6",
		295: "KEYCODE_VIDEO_APP_7",
		296: "KEYCODE_VIDEO_APP_8",
		297: "KEYCODE_FEATURED_APP_1",
		298: "KEYCODE_FEATURED_APP_2",
		299: "KEYCODE_FEATURED_APP_3",
		300: "KEYCODE_FEATURED_APP_4",
		301: "KEYCODE_DEMO_APP_1",
		302: "KEYCODE_DEMO_APP_2",
		303: "KEYCODE_DEMO_APP_3",
		304: "KEYCODE_DEMO_APP_4",
	}
	RemoteKeyCode_value = map[string]int32{
		"KEYCODE_UNKNOWN":                       0,
		"KEYCODE_SOFT_LEFT":                     1,
		"KEYCODE_SOFT_RIGHT":                    2,
		"KEYCODE_HOME":                          3,
		"KEYCODE_BACK":                          4,
		"KEYCODE_CALL":                          5,
		"KEYCODE_ENDCALL":                       6,
		"KEYCODE_0":                             7,
		"KEYCODE_1":                             8,
		"KEYCODE_2":                             9,
		"KEYCODE_3":                             10,
		"KEYCODE_4":                             11,
		"KEYCODE_5":                             12,
		"KEYCODE_6":                             13,
		"KEYCODE_7":                             14,
		"KEYCODE_8":                             15,
		"KEYCODE_9":                             16,
		"KEYCODE_STAR":                          17,
		"KEYCODE_POUND":                         18,
		"KEYCODE_DPAD_UP":                       19,
		"KEYCODE_DPAD_DOWN":                     20,
		"KEYCODE_DPAD_LEFT":                     21,
		"KEYCODE_DPAD_RIGHT":                    22,
		"KEYCODE_DPAD_CENTER":                   23,
		"KEYCODE_VOLUME_UP":                     24,
		"KEYCODE_VOLUME_DOWN":                   25,
		"KEYCODE_POWER":                         26,
		"KEYCODE_CAMERA":                        27,
		"KEYCODE_CLEAR":                         28,
		"KEYCODE_A":                             29,
		"KEYCODE_B":                             30,
		"KEYCODE_C":                             31,
		"KEYCODE_D":                             32,
		"KEYCODE_E":                             33,
		"KEYCODE_F":                             34,
		"KEYCODE_G":                             35,
		"KEYCODE_H":                             36,
		"KEYCODE_I":                             37,
		"KEYCODE_J":                             38,
		"KEYCODE_K":                             39,
		"KEYCODE_L":                             40,
		"KEYCODE_M":                             41,
		"KEYCODE_N":                             42,
		"KEYCODE_O":                             43,
		"KEYCODE_P":                             44,
		"KEYCODE_Q":                             45,
		"KEYCODE_R":                             46,
		"KEYCODE_S":                             47,
		"KEYCODE_T":                             48,
		"KEYCODE_U":                             49,
		"KEYCODE_V":                             50,
		"KEYCODE_W":                             51,
		"KEYCODE_X":                             52,
		"KEYCODE_Y":                             53,
		"KEYCODE_Z":                             54,
		"KEYCODE_COMMA":                         55,
		"KEYCODE_PERIOD":                        56,
		"KEYCODE_ALT_LEFT":                      57,
		"KEYCODE_ALT_RIGHT":                     58,
		"KEYCODE_SHIFT_LEFT":                    59,
		"KEYCODE_SHIFT_RIGHT":                   60,
		"KEYCODE_TAB":                           61,
		"KEYCODE_SPACE":                         62,
		"KEYCODE_SYM":                           63,
		"KEYCODE_EXPLORER":                      64,
		"KEYCODE_ENVELOPE":                      65,
		"KEYCODE_ENTER":                         66,
		"KEYCODE_DEL":                           67,
		"KEYCODE_GRAVE":                         68,
		"KEYCODE_MINUS":                         69,
		"KEYCODE_EQUALS":                        70,
		"KEYCODE_LEFT_BRACKET":                  71,
		"KEYCODE_RIGHT_BRACKET":                 72,
		"KEYCODE_BACKSLASH":                     73,
		"KEYCODE_SEMICOLON":                     74,
		"KEYCODE_APOSTROPHE":                    75,
		"KEYCODE_SLASH":                         76,
		"KEYCODE_AT":                            77,
		"KEYCODE_NUM":                           78,
		"KEYCODE_HEADSETHOOK":                   79,
		"KEYCODE_FOCUS":                         80,
		"KEYCODE_PLUS":                          81,
		"KEYCODE_MENU":                          82,
		"KEYCODE_NOTIFICATION":                  83,
		"KEYCODE_SEARCH":                        84,
		"KEYCODE_MEDIA_PLAY_PAUSE":              85,
		"KEYCODE_MEDIA_STOP":                    86,
		"KEYCODE_MEDIA_NEXT":                    87,
		"KEYCODE_MEDIA_PREVIOUS":                88,
		"KEYCODE_MEDIA_REWIND":                  89,
		"KEYCODE_MEDIA_FAST_FORWARD":            90,
		"KEYCODE_MUTE":                          91,
		"KEYCODE_PAGE_UP":                       92,
		"KEYCODE_PAGE_DOWN":                     93,
		"KEYCODE_PICTSYMBOLS":                   94,
		"KEYCODE_SWITCH_CHARSET":                95,
		"KEYCODE_BUTTON_A":                      96,
		"KEYCODE_BUTTON_B":                      97,
		"KEYCODE_BUTTON_C":                      98,
		"KEYCODE_BUTTON_X":                      99,
		"KEYCODE_BUTTON_Y":                      100,
		"KEYCODE_BUTTON_Z":                      101,
		"KEYCODE_BUTTON_L1":                     102,
		"KEYCODE_BUTTON_R1":                     103,
		"KEYCODE_BUTTON_L2":                     104,
		"KEYCODE_BUTTON_R2":                     105,
		"KEYCODE_BUTTON_THUMBL":                 106,
		"KEYCODE_BUTTON_THUMBR":                 107,
		"KEYCODE_BUTTON_START":                  108,
		"KEYCODE_BUTTON_SELECT":                 109,
		"KEYCODE_BUTTON_MODE":                   110,
		"KEYCODE_ESCAPE":                        111,
		"KEYCODE_FORWARD_DEL":                   112,
		"KEYCODE_CTRL_LEFT":                     113,
		"KEYCODE_CTRL_RIGHT":                    114,
		"KEYCODE_CAPS_LOCK":                     115,
		"KEYCODE_SCROLL_LOCK":                   116,
		"KEYCODE_META_LEFT":                     117,
		"KEYCODE_META_RIGHT":                    118,
		"KEYCODE_FUNCTION":                      119,
		"KEYCODE_SYSRQ":                         120,
		"KEYCODE_BREAK":                         121,
		"KEYCODE_MOVE_HOME":                     122,
		"KEYCODE_MOVE_END":                      123,
		"KEYCODE_INSERT":                        124,
		"KEYCODE_FORWARD":                       125,
		"KEYCODE_MEDIA_PLAY":                    126,
		"KEYCODE_MEDIA_PAUSE":                   127,
		"KEYCODE_MEDIA_CLOSE":                   128,
		"KEYCODE_MEDIA_EJECT":                   129,
		"KEYCODE_MEDIA_RECORD":                  130,
		"KEYCODE_F1":                            131,
		"KEYCODE_F2":                            132,
		"KEYCODE_F3":                            133,
		"KEYCODE_F4":                            134,
		"KEYCODE_F5":                            135,
		"KEYCODE_F6":                            136,
		"KEYCODE_F7":                            137,
		"KEYCODE_F8":                            138,
		"KEYCODE_F9":                            139,
		"KEYCODE_F10":                           140,
		"KEYCODE_F11":                           141,
		"KEYCODE_F12":                           142,
		"KEYCODE_NUM_LOCK":                      143,
		"KEYCODE_NUMPAD_0":                      144,
		"KEYCODE_NUMPAD_1":                      145,
		"KEYCODE_NUMPAD_2":                      146,
		"KEYCODE_NUMPAD_3":                      147,
		"KEYCODE_NUMPAD_4":                      148,
		"KEYCODE_NUMPAD_5":                      149,
		"KEYCODE_NUMPAD_6":                      150,
		"KEYCODE_NUMPAD_7":                      151,
		"KEYCODE_NUMPAD_8":                      152,
		"KEYCODE_NUMPAD_9":                      153,
		"KEYCODE_NUMPAD_DIVIDE":                 154,
		"KEYCODE_NUMPAD_MULTIPLY":               155,
		"KEYCODE_NUMPAD_SUBTRACT":               156,
		"KEYCODE_NUMPAD_ADD":                    157,
		"KEYCODE_NUMPAD_DOT":                    158,
		"KEYCODE_NUMPAD_COMMA":                  159,
		"KEYCODE_NUMPAD_ENTER":                  160,
		"KEYCODE_NUMPAD_EQUALS":                 161,
		"KEYCODE_NUMPAD_LEFT_PAREN":             162,
		"KEYCODE_NUMPAD_RIGHT_PAREN":            163,
		"KEYCODE_VOLUME_MUTE":                   164,
		"KEYCODE_INFO":                          165,
		"KEYCODE_CHANNEL_UP":                    166,
		"KEYCODE_CHANNEL_DOWN":                  167,
		"KEYCODE_ZOOM_IN":                       168,
		"KEYCODE_ZOOM_OUT":                      169,
		"KEYCODE_TV":                            170,
		"KEYCODE_WINDOW":                        171,
		"KEYCODE_GUIDE":                         172,
		"KEYCODE_DVR":                           173,
		"KEYCODE_BOOKMARK":                      174,
		"KEYCODE_CAPTIONS":                      175,
		"KEYCODE_SETTINGS":                      176,
		"KEYCODE_TV_POWER":                      177,
		"KEYCODE_TV_INPUT":                      178,
		"KEYCODE_STB_POWER":                     179,
		"KEYCODE_STB_INPUT":                     180,
		"KEYCODE_AVR_POWER":                     181,
		"KEYCODE_AVR_INPUT":                     182,
		"KEYCODE_PROG_RED":                      183,
		"KEYCODE_PROG_GREEN":                    184,
		"KEYCODE_PROG_YELLOW":                   185,
		"KEYCODE_PROG_BLUE":                     186,
		"KEYCODE_APP_SWITCH":                    187,
		"KEYCODE_BUTTON_1":                      188,
		"KEYCODE_BUTTON_2":                      189,
		"KEYCODE_BUTTON_3":                      190,
		"KEYCODE_BUTTON_4":                      191,
		"KEYCODE_BUTTON_5":                      192,
		"KEYCODE_BUTTON_6":                      193,
		"KEYCODE_BUTTON_7":                      194,
		"KEYCODE_BUTTON_8":                      195,
		"KEYCODE_BUTTON_9":                      196,
		"KEYCODE_BUTTON_10":                     197,
		"KEYCODE_BUTTON_11":                     198,
		"KEYCODE_BUTTON_12":                     199,
		"KEYCODE_BUTTON_13":                     200,
		"KEYCODE_BUTTON_14":                     201,
		"KEYCODE_BUTTON_15":                     202,
		"KEYCODE_BUTTON_16":                     203,
		"KEYCODE_LANGUAGE_SWITCH":               204,
		"KEYCODE_MANNER_MODE":                   205,
		"KEYCODE_3D_MODE":                       206,
		"KEYCODE_CONTACTS":                      207,
		"KEYCODE_CALENDAR":                      208,
		"KEYCODE_MUSIC":                         209,
		"KEYCODE_CALCULATOR":                    210,
		"KEYCODE_ZENKAKU_HANKAKU":               211,
		"KEYCODE_EISU":                          212,
		"KEYCODE_MUHENKAN":                      213,
		"KEYCODE_HENKAN":                        214,
		"KEYCODE_KATAKANA_HIRAGANA":             215,
		"KEYCODE_YEN":                           216,
		"KEYCODE_RO":                            217,
		"KEYCODE_KANA":                          218,
		"KEYCODE_ASSIST":                        219,
		"KEYCODE_BRIGHTNESS_DOWN":               220,
		"KEYCODE_BRIGHTNESS_UP":                 221,
		"KEYCODE_MEDIA_AUDIO_TRACK":             222,
		"KEYCODE_SLEEP":                         223,
		"KEYCODE_WAKEUP":                        224,
		"KEYCODE_PAIRING":                       225,
		"KEYCODE_MEDIA_TOP_MENU":                226,
		"KEYCODE_11":                            227,
		"KEYCODE_12":                            228,
		"KEYCODE_LAST_CHANNEL":                  229,
		"KEYCODE_TV_DATA_SERVICE":               230,
		"KEYCODE_VOICE_ASSIST":                  231,
		"KEYCODE_TV_RADIO_SERVICE":              232,
		"KEYCODE_TV_TELETEXT":                   233,
		"KEYCODE_TV_NUMBER_ENTRY":               234,
		"KEYCODE_TV_TERRESTRIAL_ANALOG":         235,
		"KEYCODE_TV_TERRESTRIAL_DIGITAL":        236,
		"KEYCODE_TV_SATELLITE":                  237,
		"KEYCODE_TV_SATELLITE_BS":               238,
		"KEYCODE_TV_SATELLITE_CS":               239,
		"KEYCODE_TV_SATELLITE_SERVICE":          240,
		"KEYCODE_TV_NETWORK":                    241,
		"KEYCODE_TV_ANTENNA_CABLE":              242,
		"KEYCODE_TV_INPUT_HDMI_1":               243,
		"KEYCODE_TV_INPUT_HDMI_2":               244,
		"KEYCODE_TV_INPUT_HDMI_3":               245,
		"KEYCODE_TV_INPUT_HDMI_4":               246,
		"KEYCODE_TV_INPUT_COMPOSITE_1":          247,
		"KEYCODE_TV_INPUT_COMPOSITE_2":          248,
		"KEYCODE_TV_INPUT_COMPONENT_1":          249,
		"KEYCODE_TV_INPUT_COMPONENT_2":          250,
		"KEYCODE_TV_INPUT_VGA_1":                251,
		"KEYCODE_TV_AUDIO_DESCRIPTION":          252,
		"KEYCODE_TV_AUDIO_DESCRIPTION_MIX_UP":   253,
		"KEYCODE_TV_AUDIO_DESCRIPTION_MIX_DOWN": 254,
		"KEYCODE_TV_ZOOM_MODE":                  255,
		"KEYCODE_TV_CONTENTS_MENU":              256,
		"KEYCODE_TV_MEDIA_CONTEXT_MENU":         257,
		"KEYCODE_TV_TIMER_PROGRAMMING":          258,
		"KEYCODE_HELP":                          259,
		"KEYCODE_NAVIGATE_PREVIOUS":             260,
		"KEYCODE_NAVIGATE_NEXT":                 261,
		"KEYCODE_NAVIGATE_IN":                   262,
		"KEYCODE_NAVIGATE_OUT":                  263,
		"KEYCODE_STEM_PRIMARY":                  264,
		"KEYCODE_STEM_1":                        265,
		"KEYCODE_STEM_2":                        266,
		"KEYCODE_STEM_3":                        267,
		"KEYCODE_DPAD_UP_LEFT":                  268,
		"KEYCODE_DPAD_DOWN_LEFT":                269,
		"KEYCODE_DPAD_UP_RIGHT":                 270,
		"KEYCODE_DPAD_DOWN_RIGHT":               271,
		"KEYCODE_MEDIA_SKIP_FORWARD":            272,
		"KEYCODE_MEDIA_SKIP_BACKWARD":           273,
		"KEYCODE_MEDIA_STEP_FORWARD":            274,
		"KEYCODE_MEDIA_STEP_BACKWARD":           275,
		"KEYCODE_SOFT_SLEEP":                    276,
		"KEYCODE_CUT":                           277,
		"KEYCODE_COPY":                          278,
		"KEYCODE_PASTE":                         279,
		"KEYCODE_SYSTEM_NAVIGATION_UP":          280,
		"KEYCODE_SYSTEM_NAVIGATION_DOWN":        281,
		"KEYCODE_SYSTEM_NAVIGATION_LEFT":        282,
		"KEYCODE_SYSTEM_NAVIGATION_RIGHT":       283,
		"KEYCODE_ALL_APPS":                      284,
		"KEYCODE_REFRESH":                       285,
		"KEYCODE_THUMBS_UP":                     286,
		"KEYCODE_THUMBS_DOWN":                   287,
		"KEYCODE_PROFILE_SWITCH":                288,
		"KEYCODE_VIDEO_APP_1":                   289,
		"KEYCODE_VIDEO_APP_2":                   290,
		"KEYCODE_VIDEO_APP_3":                   291,
		"KEYCODE_VIDEO_APP_4":                   292,
		"KEYCODE_VIDEO_APP_5":                   293,
		"KEYCODE_VIDEO_APP_6":                   294,
		"KEYCODE_VIDEO_APP_7":                   295,
		"KEYCODE_VIDEO_APP_8":                   296,
		"KEYCODE_FEATURED_APP_1":                297,
		"KEYCODE_FEATURED_APP_2":                298,
		"KEYCODE_FEATURED_APP_3":                299,
		"KEYCODE_FEATURED_APP_4":                300,
		"KEYCODE_DEMO_APP_1":                    301,
		"KEYCODE_DEMO_APP_2":                    302,
		"KEYCODE_DEMO_APP_3":                    303,
		"KEYCODE_DEMO_APP_4":                    304,
	}
)

func (x RemoteKeyCode) Enum() *RemoteKeyCode {
	p := new(RemoteKeyCode)
	*p = x
	return p
}

func (x RemoteKeyCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RemoteKeyCode) Descriptor() protoreflect.EnumDescriptor {
	return file_remotemessage_proto_enumTypes[0].Descriptor()
}

func (RemoteKeyCode) Type() protoreflect.EnumType {
	return &file_remotemessage_proto_enumTypes[0]
}

func (x RemoteKeyCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RemoteKeyCode.Descriptor instead.
func (RemoteKeyCode) EnumDescriptor() ([]byte, []int) {
	return file_remotemessage_proto_rawDescGZIP(), []int{0}
}

type RemoteDirection int32

const (
	RemoteDirection_UNKNOWN_DIRECTION RemoteDirection = 0
	RemoteDirection_START_LONG        RemoteDirection = 1
	RemoteDirection_END_LONG          RemoteDirection = 2
	RemoteDirection_SHORT             RemoteDirection = 3
)

// Enum value maps for RemoteDirection.
var (
	RemoteDirection_name = map[int32]string{
		0: "UNKNOWN_DIRECTION",
		1: "START_LONG",
		2: "END_LONG",
		3: "SHORT",
	}
	RemoteDirection_value = map[string]int32{
		"UNKNOWN_DIRECTION": 0,
		"START_LONG":        1,
		"END_LONG":          2,
		"SHORT":             3,
	}
)

func (x RemoteDirection) Enum() *RemoteDirection {
	p := new(RemoteDirection)
	*p = x
	return p
}

func (x RemoteDirection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RemoteDirection) Descriptor() protoreflect.EnumDescriptor {
	return file_remotemessage_proto_enumTypes[1].Descriptor()
}

func (RemoteDirection) Type() protoreflect.EnumType {
	return &file_remotemessage_proto_enumTypes[1]
}

func (x RemoteDirection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RemoteDirection.Descriptor instead.
func (RemoteDirection) EnumDescriptor() ([]byte, []int) {
	return file_remotemessage_proto_rawDescGZIP(), []int{1}
}

type RemoteAppLinkLaunchRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AppLink       string                 `protobuf:"bytes,1,opt,name=app_link,json=appLink,proto3" json:"app_link,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoteAppLinkLaunchRequest) Reset() {
	*x = RemoteAppLinkLaunchRequest{}
	mi := &file_remotemessage_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoteAppLinkLaunchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoteAppLinkLaunchRequest) ProtoMessage() {}

func (x *RemoteAppLinkLaunchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_remotemessage_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoteAppLinkLaunchRequest.ProtoReflect.Descriptor instead.
func (*RemoteAppLinkLaunchRequest) Descriptor() ([]byte, []int) {
	return file_remotemessage_proto_rawDescGZIP(), []int{0}
}

func (x *RemoteAppLinkLaunchRequest) GetAppLink() string {
	if x != nil {
		return x.AppLink
	}
	return ""
}

type RemoteResetPreferredAudioDevice struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoteResetPreferredAudioDevice) Reset() {
	*x = RemoteResetPreferredAudioDevice{}
	mi := &file_remotemessage_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoteResetPreferredAudioDevice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoteResetPreferredAudioDevice) ProtoMessage() {}

func (x *RemoteResetPreferredAudioDevice) ProtoReflect() protoreflect.Message {
	mi := &file_remotemessage_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoteResetPreferredAudioDevice.ProtoReflect.Descriptor instead.
func (*RemoteResetPreferredAudioDevice) Descriptor() ([]byte, []int) {
	return file_remotemessage_proto_rawDescGZIP(), []int{1}
}

type RemoteSetPreferredAudioDevice struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoteSetPreferredAudioDevice) Reset() {
	*x = RemoteSetPreferredAudioDevice{}
	mi := &file_remotemessage_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoteSetPreferredAudioDevice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoteSetPreferredAudioDevice) ProtoMessage() {}

func (x *RemoteSetPreferredAudioDevice) ProtoReflect() protoreflect.Message {
	mi := &file_remotemessage_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoteSetPreferredAudioDevice.ProtoReflect.Descriptor instead.
func (*RemoteSetPreferredAudioDevice) Descriptor() ([]byte, []int) {
	return file_remotemessage_proto_rawDescGZIP(), []int{2}
}

type RemoteAdjustVolumeLevel struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoteAdjustVolumeLevel) Reset() {
	*x = RemoteAdjustVolumeLevel{}
	mi := &file_remotemessage_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoteAdjustVolumeLevel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoteAdjustVolumeLevel) ProtoMessage() {}

func (x *RemoteAdjustVolumeLevel) ProtoReflect() protoreflect.Message {
	mi := &file_remotemessage_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoteAdjustVolumeLevel.ProtoReflect.Descriptor instead.
func (*RemoteAdjustVolumeLevel) Descriptor() ([]byte, []int) {
	return file_remotemessage_proto_rawDescGZIP(), []int{3}
}

type RemoteSetVolumeLevel struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Unknown1      uint32                 `protobuf:"varint,1,opt,name=unknown1,proto3" json:"unknown1,omitempty"`
	Unknown2      uint32                 `protobuf:"varint,2,opt,name=unknown2,proto3" json:"unknown2,omitempty"`
	PlayerModel   string                 `protobuf:"bytes,3,opt,name=player_model,json=playerModel,proto3" json:"player_model,omitempty"`
	Unknown4      uint32                 `protobuf:"varint,4,opt,name=unknown4,proto3" json:"unknown4,omitempty"`
	Unknown5      uint32                 `protobuf:"varint,5,opt,name=unknown5,proto3" json:"unknown5,omitempty"`
	VolumeMax     uint32                 `protobuf:"varint,6,opt,name=volume_max,json=volumeMax,proto3" json:"volume_max,omitempty"`
	VolumeLevel   uint32                 `protobuf:"varint,7,opt,name=volume_level,json=volumeLevel,proto3" json:"volume_level,omitempty"`
	VolumeMuted   bool                   `protobuf:"varint,8,opt,name=volume_muted,json=volumeMuted,proto3" json:"volume_muted,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoteSetVolumeLevel) Reset() {
	*x = RemoteSetVolumeLevel{}
	mi := &file_remotemessage_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoteSetVolumeLevel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoteSetVolumeLevel) ProtoMessage() {}

func (x *RemoteSetVolumeLevel) ProtoReflect() protoreflect.Message {
	mi := &file_remotemessage_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoteSetVolumeLevel.ProtoReflect.Descriptor instead.
func (*RemoteSetVolumeLevel) Descriptor() ([]byte, []int) {
	return file_remotemessage_proto_rawDescGZIP(), []int{4}
}

func (x *RemoteSetVolumeLevel) GetUnknown1() uint32 {
	if x != nil {
		return x.Unknown1
	}
	return 0
}

func (x *RemoteSetVolumeLevel) GetUnknown2() uint32 {
	if x != nil {
		return x.Unknown2
	}
	return 0
}

func (x *RemoteSetVolumeLevel) GetPlayerModel() string {
	if x != nil {
		return x.PlayerModel
	}
	return ""
}

func (x *RemoteSetVolumeLevel) GetUnknown4() uint32 {
	if x != nil {
		return x.Unknown4
	}
	return 0
}

func (x *RemoteSetVolumeLevel) GetUnknown5() uint32 {
	if x != nil {
		return x.Unknown5
	}
	return 0
}

func (x *RemoteSetVolumeLevel) GetVolumeMax() uint32 {
	if x != nil {
		return x.VolumeMax
	}
	return 0
}

func (x *RemoteSetVolumeLevel) GetVolumeLevel() uint32 {
	if x != nil {
		return x.VolumeLevel
	}
	return 0
}

func (x *RemoteSetVolumeLevel) GetVolumeMuted() bool {
	if x != nil {
		return x.VolumeMuted
	}
	return false
}

type RemoteStart struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Started       bool                   `protobuf:"varint,1,opt,name=started,proto3" json:"started,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoteStart) Reset() {
	*x = RemoteStart{}
	mi := &file_remotemessage_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoteStart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoteStart) ProtoMessage() {}

func (x *RemoteStart) ProtoReflect() protoreflect.Message {
	mi := &file_remotemessage_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoteStart.ProtoReflect.Descriptor instead.
func (*RemoteStart) Descriptor() ([]byte, []int) {
	return file_remotemessage_proto_rawDescGZIP(), []int{5}
}

func (x *RemoteStart) GetStarted() bool {
	if x != nil {
		return x.Started
	}
	return false
}

type RemoteVoiceEnd struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoteVoiceEnd) Reset() {
	*x = RemoteVoiceEnd{}
	mi := &file_remotemessage_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoteVoiceEnd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoteVoiceEnd) ProtoMessage() {}

func (x *RemoteVoiceEnd) ProtoReflect() protoreflect.Message {
	mi := &file_remotemessage_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoteVoiceEnd.ProtoReflect.Descriptor instead.
func (*RemoteVoiceEnd) Descriptor() ([]byte, []int) {
	return file_remotemessage_proto_rawDescGZIP(), []int{6}
}

type RemoteVoicePayload struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoteVoicePayload) Reset() {
	*x = RemoteVoicePayload{}
	mi := &file_remotemessage_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoteVoicePayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoteVoicePayload) ProtoMessage() {}

func (x *RemoteVoicePayload) ProtoReflect() protoreflect.Message {
	mi := &file_remotemessage_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoteVoicePayload.ProtoReflect.Descriptor instead.
func (*RemoteVoicePayload) Descriptor() ([]byte, []int) {
	return file_remotemessage_proto_rawDescGZIP(), []int{7}
}

type RemoteVoiceBegin struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoteVoiceBegin) Reset() {
	*x = RemoteVoiceBegin{}
	mi := &file_remotemessage_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoteVoiceBegin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoteVoiceBegin) ProtoMessage() {}

func (x *RemoteVoiceBegin) ProtoReflect() protoreflect.Message {
	mi := &file_remotemessage_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoteVoiceBegin.ProtoReflect.Descriptor instead.
func (*RemoteVoiceBegin) Descriptor() ([]byte, []int) {
	return file_remotemessage_proto_rawDescGZIP(), []int{8}
}

type RemoteTextFieldStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CounterField  int32                  `protobuf:"varint,1,opt,name=counter_field,json=counterField,proto3" json:"counter_field,omitempty"`
	Value         string                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Start         int32                  `protobuf:"varint,3,opt,name=start,proto3" json:"start,omitempty"`
	End           int32                  `protobuf:"varint,4,opt,name=end,proto3" json:"end,omitempty"`
	Int5          int32                  `protobuf:"varint,5,opt,name=int5,proto3" json:"int5,omitempty"`
	Label         string                 `protobuf:"bytes,6,opt,name=label,proto3" json:"label,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoteTextFieldStatus) Reset() {
	*x = RemoteTextFieldStatus{}
	mi := &file_remotemessage_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoteTextFieldStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoteTextFieldStatus) ProtoMessage() {}

func (x *RemoteTextFieldStatus) ProtoReflect() protoreflect.Message {
	mi := &file_remotemessage_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoteTextFieldStatus.ProtoReflect.Descriptor instead.
func (*RemoteTextFieldStatus) Descriptor() ([]byte, []int) {
	return file_remotemessage_proto_rawDescGZIP(), []int{9}
}

func (x *RemoteTextFieldStatus) GetCounterField() int32 {
	if x != nil {
		return x.CounterField
	}
	return 0
}

func (x *RemoteTextFieldStatus) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *RemoteTextFieldStatus) GetStart() int32 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *RemoteTextFieldStatus) GetEnd() int32 {
	if x != nil {
		return x.End
	}
	return 0
}

func (x *RemoteTextFieldStatus) GetInt5() int32 {
	if x != nil {
		return x.Int5
	}
	return 0
}

func (x *RemoteTextFieldStatus) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

type RemoteImeShowRequest struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	RemoteTextFieldStatus *RemoteTextFieldStatus `protobuf:"bytes,2,opt,name=remote_text_field_status,json=remoteTextFieldStatus,proto3" json:"remote_text_field_status,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *RemoteImeShowRequest) Reset() {
	*x = RemoteImeShowRequest{}
	mi := &file_remotemessage_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoteImeShowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoteImeShowRequest) ProtoMessage() {}

func (x *RemoteImeShowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_remotemessage_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoteImeShowRequest.ProtoReflect.Descriptor instead.
func (*RemoteImeShowRequest) Descriptor() ([]byte, []int) {
	return file_remotemessage_proto_rawDescGZIP(), []int{10}
}

func (x *RemoteImeShowRequest) GetRemoteTextFieldStatus() *RemoteTextFieldStatus {
	if x != nil {
		return x.RemoteTextFieldStatus
	}
	return nil
}

type RemoteEditInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Insert        int32                  `protobuf:"varint,2,opt,name=insert,proto3" json:"insert,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoteEditInfo) Reset() {
	*x = RemoteEditInfo{}
	mi := &file_remotemessage_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoteEditInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoteEditInfo) ProtoMessage() {}

func (x *RemoteEditInfo) ProtoReflect() protoreflect.Message {
	mi := &file_remotemessage_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoteEditInfo.ProtoReflect.Descriptor instead.
func (*RemoteEditInfo) Descriptor() ([]byte, []int) {
	return file_remotemessage_proto_rawDescGZIP(), []int{11}
}

func (x *RemoteEditInfo) GetInsert() int32 {
	if x != nil {
		return x.Insert
	}
	return 0
}

type RemoteImeBatchEdit struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ImeCounter    int32                  `protobuf:"varint,1,opt,name=ime_counter,json=imeCounter,proto3" json:"ime_counter,omitempty"`
	FieldCounter  int32                  `protobuf:"varint,2,opt,name=field_counter,json=fieldCounter,proto3" json:"field_counter,omitempty"`
	EditInfo      *RemoteEditInfo        `protobuf:"bytes,3,opt,name=edit_info,json=editInfo,proto3" json:"edit_info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoteImeBatchEdit) Reset() {
	*x = RemoteImeBatchEdit{}
	mi := &file_remotemessage_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoteImeBatchEdit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoteImeBatchEdit) ProtoMessage() {}

func (x *RemoteImeBatchEdit) ProtoReflect() protoreflect.Message {
	mi := &file_remotemessage_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoteImeBatchEdit.ProtoReflect.Descriptor instead.
func (*RemoteImeBatchEdit) Descriptor() ([]byte, []int) {
	return file_remotemessage_proto_rawDescGZIP(), []int{12}
}

func (x *RemoteImeBatchEdit) GetImeCounter() int32 {
	if x != nil {
		return x.ImeCounter
	}
	return 0
}

func (x *RemoteImeBatchEdit) GetFieldCounter() int32 {
	if x != nil {
		return x.FieldCounter
	}
	return 0
}

func (x *RemoteImeBatchEdit) GetEditInfo() *RemoteEditInfo {
	if x != nil {
		return x.EditInfo
	}
	return nil
}

type RemoteAppInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Counter       int32                  `protobuf:"varint,1,opt,name=counter,proto3" json:"counter,omitempty"`
	Int2          int32                  `protobuf:"varint,2,opt,name=int2,proto3" json:"int2,omitempty"`
	Int3          int32                  `protobuf:"varint,3,opt,name=int3,proto3" json:"int3,omitempty"`
	Int4          string                 `protobuf:"bytes,4,opt,name=int4,proto3" json:"int4,omitempty"`
	Int7          int32                  `protobuf:"varint,7,opt,name=int7,proto3" json:"int7,omitempty"`
	Int8          int32                  `protobuf:"varint,8,opt,name=int8,proto3" json:"int8,omitempty"`
	Label         string                 `protobuf:"bytes,10,opt,name=label,proto3" json:"label,omitempty"`
	AppPackage    string                 `protobuf:"bytes,12,opt,name=app_package,json=appPackage,proto3" json:"app_package,omitempty"`
	Int13         int32                  `protobuf:"varint,13,opt,name=int13,proto3" json:"int13,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoteAppInfo) Reset() {
	*x = RemoteAppInfo{}
	mi := &file_remotemessage_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoteAppInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoteAppInfo) ProtoMessage() {}

func (x *RemoteAppInfo) ProtoReflect() protoreflect.Message {
	mi := &file_remotemessage_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoteAppInfo.ProtoReflect.Descriptor instead.
func (*RemoteAppInfo) Descriptor() ([]byte, []int) {
	return file_remotemessage_proto_rawDescGZIP(), []int{13}
}

func (x *RemoteAppInfo) GetCounter() int32 {
	if x != nil {
		return x.Counter
	}
	return 0
}

func (x *RemoteAppInfo) GetInt2() int32 {
	if x != nil {
		return x.Int2
	}
	return 0
}

func (x *RemoteAppInfo) GetInt3() int32 {
	if x != nil {
		return x.Int3
	}
	return 0
}

func (x *RemoteAppInfo) GetInt4() string {
	if x != nil {
		return x.Int4
	}
	return ""
}

func (x *RemoteAppInfo) GetInt7() int32 {
	if x != nil {
		return x.Int7
	}
	return 0
}

func (x *RemoteAppInfo) GetInt8() int32 {
	if x != nil {
		return x.Int8
	}
	return 0
}

func (x *RemoteAppInfo) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *RemoteAppInfo) GetAppPackage() string {
	if x != nil {
		return x.AppPackage
	}
	return ""
}

func (x *RemoteAppInfo) GetInt13() int32 {
	if x != nil {
		return x.Int13
	}
	return 0
}

type RemoteImeKeyInject struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	AppInfo         *RemoteAppInfo         `protobuf:"bytes,1,opt,name=app_info,json=appInfo,proto3" json:"app_info,omitempty"`
	TextFieldStatus *RemoteTextFieldStatus `protobuf:"bytes,2,opt,name=text_field_status,json=textFieldStatus,proto3" json:"text_field_status,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *RemoteImeKeyInject) Reset() {
	*x = RemoteImeKeyInject{}
	mi := &file_remotemessage_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoteImeKeyInject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoteImeKeyInject) ProtoMessage() {}

func (x *RemoteImeKeyInject) ProtoReflect() protoreflect.Message {
	mi := &file_remotemessage_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoteImeKeyInject.ProtoReflect.Descriptor instead.
func (*RemoteImeKeyInject) Descriptor() ([]byte, []int) {
	return file_remotemessage_proto_rawDescGZIP(), []int{14}
}

func (x *RemoteImeKeyInject) GetAppInfo() *RemoteAppInfo {
	if x != nil {
		return x.AppInfo
	}
	return nil
}

func (x *RemoteImeKeyInject) GetTextFieldStatus() *RemoteTextFieldStatus {
	if x != nil {
		return x.TextFieldStatus
	}
	return nil
}

type RemoteKeyInject struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	KeyCode       RemoteKeyCode          `protobuf:"varint,1,opt,name=key_code,json=keyCode,proto3,enum=remote.RemoteKeyCode" json:"key_code,omitempty"`
	Direction     RemoteDirection        `protobuf:"varint,2,opt,name=direction,proto3,enum=remote.RemoteDirection" json:"direction,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoteKeyInject) Reset() {
	*x = RemoteKeyInject{}
	mi := &file_remotemessage_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoteKeyInject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoteKeyInject) ProtoMessage() {}

func (x *RemoteKeyInject) ProtoReflect() protoreflect.Message {
	mi := &file_remotemessage_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoteKeyInject.ProtoReflect.Descriptor instead.
func (*RemoteKeyInject) Descriptor() ([]byte, []int) {
	return file_remotemessage_proto_rawDescGZIP(), []int{15}
}

func (x *RemoteKeyInject) GetKeyCode() RemoteKeyCode {
	if x != nil {
		return x.KeyCode
	}
	return RemoteKeyCode_KEYCODE_UNKNOWN
}

func (x *RemoteKeyInject) GetDirection() RemoteDirection {
	if x != nil {
		return x.Direction
	}
	return RemoteDirection_UNKNOWN_DIRECTION
}

type RemotePingResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Val1          int32                  `protobuf:"varint,1,opt,name=val1,proto3" json:"val1,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemotePingResponse) Reset() {
	*x = RemotePingResponse{}
	mi := &file_remotemessage_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemotePingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemotePingResponse) ProtoMessage() {}

func (x *RemotePingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_remotemessage_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemotePingResponse.ProtoReflect.Descriptor instead.
func (*RemotePingResponse) Descriptor() ([]byte, []int) {
	return file_remotemessage_proto_rawDescGZIP(), []int{16}
}

func (x *RemotePingResponse) GetVal1() int32 {
	if x != nil {
		return x.Val1
	}
	return 0
}

type RemotePingRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Val1          int32                  `protobuf:"varint,1,opt,name=val1,proto3" json:"val1,omitempty"`
	Val2          int32                  `protobuf:"varint,2,opt,name=val2,proto3" json:"val2,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemotePingRequest) Reset() {
	*x = RemotePingRequest{}
	mi := &file_remotemessage_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemotePingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemotePingRequest) ProtoMessage() {}

func (x *RemotePingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_remotemessage_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemotePingRequest.ProtoReflect.Descriptor instead.
func (*RemotePingRequest) Descriptor() ([]byte, []int) {
	return file_remotemessage_proto_rawDescGZIP(), []int{17}
}

func (x *RemotePingRequest) GetVal1() int32 {
	if x != nil {
		return x.Val1
	}
	return 0
}

func (x *RemotePingRequest) GetVal2() int32 {
	if x != nil {
		return x.Val2
	}
	return 0
}

type RemoteSetActive struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Active        int32                  `protobuf:"varint,1,opt,name=active,proto3" json:"active,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoteSetActive) Reset() {
	*x = RemoteSetActive{}
	mi := &file_remotemessage_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoteSetActive) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoteSetActive) ProtoMessage() {}

func (x *RemoteSetActive) ProtoReflect() protoreflect.Message {
	mi := &file_remotemessage_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoteSetActive.ProtoReflect.Descriptor instead.
func (*RemoteSetActive) Descriptor() ([]byte, []int) {
	return file_remotemessage_proto_rawDescGZIP(), []int{18}
}

func (x *RemoteSetActive) GetActive() int32 {
	if x != nil {
		return x.Active
	}
	return 0
}

type RemoteDeviceInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Model         string                 `protobuf:"bytes,1,opt,name=model,proto3" json:"model,omitempty"`
	Vendor        string                 `protobuf:"bytes,2,opt,name=vendor,proto3" json:"vendor,omitempty"`
	Unknown1      int32                  `protobuf:"varint,3,opt,name=unknown1,proto3" json:"unknown1,omitempty"`
	Unknown2      string                 `protobuf:"bytes,4,opt,name=unknown2,proto3" json:"unknown2,omitempty"`
	PackageName   string                 `protobuf:"bytes,5,opt,name=package_name,json=packageName,proto3" json:"package_name,omitempty"`
	AppVersion    string                 `protobuf:"bytes,6,opt,name=app_version,json=appVersion,proto3" json:"app_version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoteDeviceInfo) Reset() {
	*x = RemoteDeviceInfo{}
	mi := &file_remotemessage_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoteDeviceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoteDeviceInfo) ProtoMessage() {}

func (x *RemoteDeviceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_remotemessage_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoteDeviceInfo.ProtoReflect.Descriptor instead.
func (*RemoteDeviceInfo) Descriptor() ([]byte, []int) {
	return file_remotemessage_proto_rawDescGZIP(), []int{19}
}

func (x *RemoteDeviceInfo) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *RemoteDeviceInfo) GetVendor() string {
	if x != nil {
		return x.Vendor
	}
	return ""
}

func (x *RemoteDeviceInfo) GetUnknown1() int32 {
	if x != nil {
		return x.Unknown1
	}
	return 0
}

func (x *RemoteDeviceInfo) GetUnknown2() string {
	if x != nil {
		return x.Unknown2
	}
	return ""
}

func (x *RemoteDeviceInfo) GetPackageName() string {
	if x != nil {
		return x.PackageName
	}
	return ""
}

func (x *RemoteDeviceInfo) GetAppVersion() string {
	if x != nil {
		return x.AppVersion
	}
	return ""
}

type RemoteConfigure struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code1         int32                  `protobuf:"varint,1,opt,name=code1,proto3" json:"code1,omitempty"`
	DeviceInfo    *RemoteDeviceInfo      `protobuf:"bytes,2,opt,name=device_info,json=deviceInfo,proto3" json:"device_info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoteConfigure) Reset() {
	*x = RemoteConfigure{}
	mi := &file_remotemessage_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoteConfigure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoteConfigure) ProtoMessage() {}

func (x *RemoteConfigure) ProtoReflect() protoreflect.Message {
	mi := &file_remotemessage_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoteConfigure.ProtoReflect.Descriptor instead.
func (*RemoteConfigure) Descriptor() ([]byte, []int) {
	return file_remotemessage_proto_rawDescGZIP(), []int{20}
}

func (x *RemoteConfigure) GetCode1() int32 {
	if x != nil {
		return x.Code1
	}
	return 0
}

func (x *RemoteConfigure) GetDeviceInfo() *RemoteDeviceInfo {
	if x != nil {
		return x.DeviceInfo
	}
	return nil
}

type RemoteError struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         bool                   `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	Message       *RemoteMessage         `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoteError) Reset() {
	*x = RemoteError{}
	mi := &file_remotemessage_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoteError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoteError) ProtoMessage() {}

func (x *RemoteError) ProtoReflect() protoreflect.Message {
	mi := &file_remotemessage_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoteError.ProtoReflect.Descriptor instead.
func (*RemoteError) Descriptor() ([]byte, []int) {
	return file_remotemessage_proto_rawDescGZIP(), []int{21}
}

func (x *RemoteError) GetValue() bool {
	if x != nil {
		return x.Value
	}
	return false
}

func (x *RemoteError) GetMessage() *RemoteMessage {
	if x != nil {
		return x.Message
	}
	return nil
}

type RemoteMessage struct {
	state                           protoimpl.MessageState           `protogen:"open.v1"`
	RemoteConfigure                 *RemoteConfigure                 `protobuf:"bytes,1,opt,name=remote_configure,json=remoteConfigure,proto3" json:"remote_configure,omitempty"`
	RemoteSetActive                 *RemoteSetActive                 `protobuf:"bytes,2,opt,name=remote_set_active,json=remoteSetActive,proto3" json:"remote_set_active,omitempty"`
	RemoteError                     *RemoteError                     `protobuf:"bytes,3,opt,name=remote_error,json=remoteError,proto3" json:"remote_error,omitempty"`
	RemotePingRequest               *RemotePingRequest               `protobuf:"bytes,8,opt,name=remote_ping_request,json=remotePingRequest,proto3" json:"remote_ping_request,omitempty"`
	RemotePingResponse              *RemotePingResponse              `protobuf:"bytes,9,opt,name=remote_ping_response,json=remotePingResponse,proto3" json:"remote_ping_response,omitempty"`
	RemoteKeyInject                 *RemoteKeyInject                 `protobuf:"bytes,10,opt,name=remote_key_inject,json=remoteKeyInject,proto3" json:"remote_key_inject,omitempty"`
	RemoteImeKeyInject              *RemoteImeKeyInject              `protobuf:"bytes,20,opt,name=remote_ime_key_inject,json=remoteImeKeyInject,proto3" json:"remote_ime_key_inject,omitempty"`
	RemoteImeBatchEdit              *RemoteImeBatchEdit              `protobuf:"bytes,21,opt,name=remote_ime_batch_edit,json=remoteImeBatchEdit,proto3" json:"remote_ime_batch_edit,omitempty"`
	RemoteImeShowRequest            *RemoteImeShowRequest            `protobuf:"bytes,22,opt,name=remote_ime_show_request,json=remoteImeShowRequest,proto3" json:"remote_ime_show_request,omitempty"`
	RemoteVoiceBegin                *RemoteVoiceBegin                `protobuf:"bytes,30,opt,name=remote_voice_begin,json=remoteVoiceBegin,proto3" json:"remote_voice_begin,omitempty"`
	RemoteVoicePayload              *RemoteVoicePayload              `protobuf:"bytes,31,opt,name=remote_voice_payload,json=remoteVoicePayload,proto3" json:"remote_voice_payload,omitempty"`
	RemoteVoiceEnd                  *RemoteVoiceEnd                  `protobuf:"bytes,32,opt,name=remote_voice_end,json=remoteVoiceEnd,proto3" json:"remote_voice_end,omitempty"`
	RemoteStart                     *RemoteStart                     `protobuf:"bytes,40,opt,name=remote_start,json=remoteStart,proto3" json:"remote_start,omitempty"`
	RemoteSetVolumeLevel            *RemoteSetVolumeLevel            `protobuf:"bytes,50,opt,name=remote_set_volume_level,json=remoteSetVolumeLevel,proto3" json:"remote_set_volume_level,omitempty"`
	RemoteAdjustVolumeLevel         *RemoteAdjustVolumeLevel         `protobuf:"bytes,51,opt,name=remote_adjust_volume_level,json=remoteAdjustVolumeLevel,proto3" json:"remote_adjust_volume_level,omitempty"`
	RemoteSetPreferredAudioDevice   *RemoteSetPreferredAudioDevice   `protobuf:"bytes,60,opt,name=remote_set_preferred_audio_device,json=remoteSetPreferredAudioDevice,proto3" json:"remote_set_preferred_audio_device,omitempty"`
	RemoteResetPreferredAudioDevice *RemoteResetPreferredAudioDevice `protobuf:"bytes,61,opt,name=remote_reset_preferred_audio_device,json=remoteResetPreferredAudioDevice,proto3" json:"remote_reset_preferred_audio_device,omitempty"`
	RemoteAppLinkLaunchRequest      *RemoteAppLinkLaunchRequest      `protobuf:"bytes,90,opt,name=remote_app_link_launch_request,json=remoteAppLinkLaunchRequest,proto3" json:"remote_app_link_launch_request,omitempty"`
	unknownFields                   protoimpl.UnknownFields
	sizeCache                       protoimpl.SizeCache
}

func (x *RemoteMessage) Reset() {
	*x = RemoteMessage{}
	mi := &file_remotemessage_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoteMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoteMessage) ProtoMessage() {}

func (x *RemoteMessage) ProtoReflect() protoreflect.Message {
	mi := &file_remotemessage_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoteMessage.ProtoReflect.Descriptor instead.
func (*RemoteMessage) Descriptor() ([]byte, []int) {
	return file_remotemessage_proto_rawDescGZIP(), []int{22}
}

func (x *RemoteMessage) GetRemoteConfigure() *RemoteConfigure {
	if x != nil {
		return x.RemoteConfigure
	}
	return nil
}

func (x *RemoteMessage) GetRemoteSetActive() *RemoteSetActive {
	if x != nil {
		return x.RemoteSetActive
	}
	return nil
}

func (x *RemoteMessage) GetRemoteError() *RemoteError {
	if x != nil {
		return x.RemoteError
	}
	return nil
}

func (x *RemoteMessage) GetRemotePingRequest() *RemotePingRequest {
	if x != nil {
		return x.RemotePingRequest
	}
	return nil
}

func (x *RemoteMessage) GetRemotePingResponse() *RemotePingResponse {
	if x != nil {
		return x.RemotePingResponse
	}
	return nil
}

func (x *RemoteMessage) GetRemoteKeyInject() *RemoteKeyInject {
	if x != nil {
		return x.RemoteKeyInject
	}
	return nil
}

func (x *RemoteMessage) GetRemoteImeKeyInject() *RemoteImeKeyInject {
	if x != nil {
		return x.RemoteImeKeyInject
	}
	return nil
}

func (x *RemoteMessage) GetRemoteImeBatchEdit() *RemoteImeBatchEdit {
	if x != nil {
		return x.RemoteImeBatchEdit
	}
	return nil
}

func (x *RemoteMessage) GetRemoteImeShowRequest() *RemoteImeShowRequest {
	if x != nil {
		return x.RemoteImeShowRequest
	}
	return nil
}

func (x *RemoteMessage) GetRemoteVoiceBegin() *RemoteVoiceBegin {
	if x != nil {
		return x.RemoteVoiceBegin
	}
	return nil
}

func (x *RemoteMessage) GetRemoteVoicePayload() *RemoteVoicePayload {
	if x != nil {
		return x.RemoteVoicePayload
	}
	return nil
}

func (x *RemoteMessage) GetRemoteVoiceEnd() *RemoteVoiceEnd {
	if x != nil {
		return x.RemoteVoiceEnd
	}
	return nil
}

func (x *RemoteMessage) GetRemoteStart() *RemoteStart {
	if x != nil {
		return x.RemoteStart
	}
	return nil
}

func (x *RemoteMessage) GetRemoteSetVolumeLevel() *RemoteSetVolumeLevel {
	if x != nil {
		return x.RemoteSetVolumeLevel
	}
	return nil
}

func (x *RemoteMessage) GetRemoteAdjustVolumeLevel() *RemoteAdjustVolumeLevel {
	if x != nil {
		return x.RemoteAdjustVolumeLevel
	}
	return nil
}

func (x *RemoteMessage) GetRemoteSetPreferredAudioDevice() *RemoteSetPreferredAudioDevice {
	if x != nil {
		return x.RemoteSetPreferredAudioDevice
	}
	return nil
}

func (x *RemoteMessage) GetRemoteResetPreferredAudioDevice() *RemoteResetPreferredAudioDevice {
	if x != nil {
		return x.RemoteResetPreferredAudioDevice
	}
	return nil
}

func (x *RemoteMessage) GetRemoteAppLinkLaunchRequest() *RemoteAppLinkLaunchRequest {
	if x != nil {
		return x.RemoteAppLinkLaunchRequest
	}
	return nil
}

var File_remotemessage_proto protoreflect.FileDescriptor

const file_remotemessage_proto_rawDesc = "" +
	"\n" +
	"\x13remotemessage.proto\x12\x06remote\"7\n" +
	"\x1aRemoteAppLinkLaunchRequest\x12\x19\n" +
	"\bapp_link\x18\x01 \x01(\tR\aappLink\"!\n" +
	"\x1fRemoteResetPreferredAudioDevice\"\x1f\n" +
	"\x1dRemoteSetPreferredAudioDevice\"\x19\n" +
	"\x17RemoteAdjustVolumeLevel\"\x8e\x02\n" +
	"\x14RemoteSetVolumeLevel\x12\x1a\n" +
	"\bunknown1\x18\x01 \x01(\rR\bunknown1\x12\x1a\n" +
	"\bunknown2\x18\x02 \x01(\rR\bunknown2\x12!\n" +
	"\fplayer_model\x18\x03 \x01(\tR\vplayerModel\x12\x1a\n" +
	"\bunknown4\x18\x04 \x01(\rR\bunknown4\x12\x1a\n" +
	"\bunknown5\x18\x05 \x01(\rR\bunknown5\x12\x1d\n" +
	"\n" +
	"volume_max\x18\x06 \x01(\rR\tvolumeMax\x12!\n" +
	"\fvolume_level\x18\a \x01(\rR\vvolumeLevel\x12!\n" +
	"\fvolume_muted\x18\b \x01(\bR\vvolumeMuted\"'\n" +
	"\vRemoteStart\x12\x18\n" +
	"\astarted\x18\x01 \x01(\bR\astarted\"\x10\n" +
	"\x0eRemoteVoiceEnd\"\x14\n" +
	"\x12RemoteVoicePayload\"\x12\n" +
	"\x10RemoteVoiceBegin\"\xa4\x01\n" +
	"\x15RemoteTextFieldStatus\x12#\n" +
	"\rcounter_field\x18\x01 \x01(\x05R\fcounterField\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value\x12\x14\n" +
	"\x05start\x18\x03 \x01(\x05R\x05start\x12\x10\n" +
	"\x03end\x18\x04 \x01(\x05R\x03end\x12\x12\n" +
	"\x04int5\x18\x05 \x01(\x05R\x04int5\x12\x14\n" +
	"\x05label\x18\x06 \x01(\tR\x05label\"n\n" +
	"\x14RemoteImeShowRequest\x12V\n" +
	"\x18remote_text_field_status\x18\x02 \x01(\v2\x1d.remote.RemoteTextFieldStatusR\x15remoteTextFieldStatus\"(\n" +
	"\x0eRemoteEditInfo\x12\x16\n" +
	"\x06insert\x18\x02 \x01(\x05R\x06insert\"\x8f\x01\n" +
	"\x12RemoteImeBatchEdit\x12\x1f\n" +
	"\vime_counter\x18\x01 \x01(\x05R\n" +
	"imeCounter\x12#\n" +
	"\rfield_counter\x18\x02 \x01(\x05R\ffieldCounter\x123\n" +
	"\tedit_info\x18\x03 \x01(\v2\x16.remote.RemoteEditInfoR\beditInfo\"\xda\x01\n" +
	"\rRemoteAppInfo\x12\x18\n" +
	"\acounter\x18\x01 \x01(\x05R\acounter\x12\x12\n" +
	"\x04int2\x18\x02 \x01(\x05R\x04int2\x12\x12\n" +
	"\x04int3\x18\x03 \x01(\x05R\x04int3\x12\x12\n" +
	"\x04int4\x18\x04 \x01(\tR\x04int4\x12\x12\n" +
	"\x04int7\x18\a \x01(\x05R\x04int7\x12\x12\n" +
	"\x04int8\x18\b \x01(\x05R\x04int8\x12\x14\n" +
	"\x05label\x18\n" +
	" \x01(\tR\x05label\x12\x1f\n" +
	"\vapp_package\x18\f \x01(\tR\n" +
	"appPackage\x12\x14\n" +
	"\x05int13\x18\r \x01(\x05R\x05int13\"\x91\x01\n" +
	"\x12RemoteImeKeyInject\x120\n" +
	"\bapp_info\x18\x01 \x01(\v2\x15.remote.RemoteAppInfoR\aappInfo\x12I\n" +
	"\x11text_field_status\x18\x02 \x01(\v2\x1d.remote.RemoteTextFieldStatusR\x0ftextFieldStatus\"z\n" +
	"\x0fRemoteKeyInject\x120\n" +
	"\bkey_code\x18\x01 \x01(\x0e2\x15.remote.RemoteKeyCodeR\akeyCode\x125\n" +
	"\tdirection\x18\x02 \x01(\x0e2\x17.remote.RemoteDirectionR\tdirection\"(\n" +
	"\x12RemotePingResponse\x12\x12\n" +
	"\x04val1\x18\x01 \x01(\x05R\x04val1\";\n" +
	"\x11RemotePingRequest\x12\x12\n" +
	"\x04val1\x18\x01 \x01(\x05R\x04val1\x12\x12\n" +
	"\x04val2\x18\x02 \x01(\x05R\x04val2\")\n" +
	"\x0fRemoteSetActive\x12\x16\n" +
	"\x06active\x18\x01 \x01(\x05R\x06active\"\xbc\x01\n" +
	"\x10RemoteDeviceInfo\x12\x14\n" +
	"\x05model\x18\x01 \x01(\tR\x05model\x12\x16\n" +
	"\x06vendor\x18\x02 \x01(\tR\x06vendor\x12\x1a\n" +
	"\bunknown1\x18\x03 \x01(\x05R\bunknown1\x12\x1a\n" +
	"\bunknown2\x18\x04 \x01(\tR\bunknown2\x12!\n" +
	"\fpackage_name\x18\x05 \x01(\tR\vpackageName\x12\x1f\n" +
	"\vapp_version\x18\x06 \x01(\tR\n" +
	"appVersion\"b\n" +
	"\x0fRemoteConfigure\x12\x14\n" +
	"\x05code1\x18\x01 \x01(\x05R\x05code1\x129\n" +
	"\vdevice_info\x18\x02 \x01(\v2\x18.remote.RemoteDeviceInfoR\n" +
	"deviceInfo\"T\n" +
	"\vRemoteError\x12\x14\n" +
	"\x05value\x18\x01 \x01(\bR\x05value\x12/\n" +
	"\amessage\x18\x02 \x01(\v2\x15.remote.RemoteMessageR\amessage\"\xb4\v\n" +
	"\rRemoteMessage\x12B\n" +
	"\x10remote_configure\x18\x01 \x01(\v2\x17.remote.RemoteConfigureR\x0fremoteConfigure\x12C\n" +
	"\x11remote_set_active\x18\x02 \x01(\v2\x17.remote.RemoteSetActiveR\x0fremoteSetActive\x126\n" +
	"\fremote_error\x18\x03 \x01(\v2\x13.remote.RemoteErrorR\vremoteError\x12I\n" +
	"\x13remote_ping_request\x18\b \x01(\v2\x19.remote.RemotePingRequestR\x11remotePingRequest\x12L\n" +
	"\x14remote_ping_response\x18\t \x01(\v2\x1a.remote.RemotePingResponseR\x12remotePingResponse\x12C\n" +
	"\x11remote_key_inject\x18\n" +
	" \x01(\v2\x17.remote.RemoteKeyInjectR\x0fremoteKeyInject\x12M\n" +
	"\x15remote_ime_key_inject\x18\x14 \x01(\v2\x1a.remote.RemoteImeKeyInjectR\x12remoteImeKeyInject\x12M\n" +
	"\x15remote_ime_batch_edit\x18\x15 \x01(\v2\x1a.remote.RemoteImeBatchEditR\x12remoteImeBatchEdit\x12S\n" +
	"\x17remote_ime_show_request\x18\x16 \x01(\v2\x1c.remote.RemoteImeShowRequestR\x14remoteImeShowRequest\x12F\n" +
	"\x12remote_voice_begin\x18\x1e \x01(\v2\x18.remote.RemoteVoiceBeginR\x10remoteVoiceBegin\x12L\n" +
	"\x14remote_voice_payload\x18\x1f \x01(\v2\x1a.remote.RemoteVoicePayloadR\x12remoteVoicePayload\x12@\n" +
	"\x10remote_voice_end\x18  \x01(\v2\x16.remote.RemoteVoiceEndR\x0eremoteVoiceEnd\x126\n" +
	"\fremote_start\x18( \x01(\v2\x13.remote.RemoteStartR\vremoteStart\x12S\n" +
	"\x17remote_set_volume_level\x182 \x01(\v2\x1c.remote.RemoteSetVolumeLevelR\x14remoteSetVolumeLevel\x12\\\n" +
	"\x1aremote_adjust_volume_level\x183 \x01(\v2\x1f.remote.RemoteAdjustVolumeLevelR\x17remoteAdjustVolumeLevel\x12o\n" +
	"!remote_set_preferred_audio_device\x18< \x01(\v2%.remote.RemoteSetPreferredAudioDeviceR\x1dremoteSetPreferredAudioDevice\x12u\n" +
	"#remote_reset_preferred_audio_device\x18= \x01(\v2'.remote.RemoteResetPreferredAudioDeviceR\x1fremoteResetPreferredAudioDevice\x12f\n" +
	"\x1eremote_app_link_launch_request\x18Z \x01(\v2\".remote.RemoteAppLinkLaunchRequestR\x1aremoteAppLinkLaunchRequest*\xe77\n" +
	"\rRemoteKeyCode\x12\x13\n" +
	"\x0fKEYCODE_UNKNOWN\x10\x00\x12\x15\n" +
	"\x11KEYCODE_SOFT_LEFT\x10\x01\x12\x16\n" +
	"\x12KEYCODE_SOFT_RIGHT\x10\x02\x12\x10\n" +
	"\fKEYCODE_HOME\x10\x03\x12\x10\n" +
	"\fKEYCODE_BACK\x10\x04\x12\x10\n" +
	"\fKEYCODE_CALL\x10\x05\x12\x13\n" +
	"\x0fKEYCODE_ENDCALL\x10\x06\x12\r\n" +
	"\tKEYCODE_0\x10\a\x12\r\n" +
	"\tKEYCODE_1\x10\b\x12\r\n" +
	"\tKEYCODE_2\x10\t\x12\r\n" +
	"\tKEYCODE_3\x10\n" +
	"\x12\r\n" +
	"\tKEYCODE_4\x10\v\x12\r\n" +
	"\tKEYCODE_5\x10\f\x12\r\n" +
	"\tKEYCODE_6\x10\r\x12\r\n" +
	"\tKEYCODE_7\x10\x0e\x12\r\n" +
	"\tKEYCODE_8\x10\x0f\x12\r\n" +
	"\tKEYCODE_9\x10\x10\x12\x10\n" +
	"\fKEYCODE_STAR\x10\x11\x12\x11\n" +
	"\rKEYCODE_POUND\x10\x12\x12\x13\n" +
	"\x0fKEYCODE_DPAD_UP\x10\x13\x12\x15\n" +
	"\x11KEYCODE_DPAD_DOWN\x10\x14\x12\x15\n" +
	"\x11KEYCODE_DPAD_LEFT\x10\x15\x12\x16\n" +
	"\x12KEYCODE_DPAD_RIGHT\x10\x16\x12\x17\n" +
	"\x13KEYCODE_DPAD_CENTER\x10\x17\x12\x15\n" +
	"\x11KEYCODE_VOLUME_UP\x10\x18\x12\x17\n" +
	"\x13KEYCODE_VOLUME_DOWN\x10\x19\x12\x11\n" +
	"\rKEYCODE_POWER\x10\x1a\x12\x12\n" +
	"\x0eKEYCODE_CAMERA\x10\x1b\x12\x11\n" +
	"\rKEYCODE_CLEAR\x10\x1c\x12\r\n" +
	"\tKEYCODE_A\x10\x1d\x12\r\n" +
	"\tKEYCODE_B\x10\x1e\x12\r\n" +
	"\tKEYCODE_C\x10\x1f\x12\r\n" +
	"\tKEYCODE_D\x10 \x12\r\n" +
	"\tKEYCODE_E\x10!\x12\r\n" +
	"\tKEYCODE_F\x10\"\x12\r\n" +
	"\tKEYCODE_G\x10#\x12\r\n" +
	"\tKEYCODE_H\x10$\x12\r\n" +
	"\tKEYCODE_I\x10%\x12\r\n" +
	"\tKEYCODE_J\x10&\x12\r\n" +
	"\tKEYCODE_K\x10'\x12\r\n" +
	"\tKEYCODE_L\x10(\x12\r\n" +
	"\tKEYCODE_M\x10)\x12\r\n" +
	"\tKEYCODE_N\x10*\x12\r\n" +
	"\tKEYCODE_O\x10+\x12\r\n" +
	"\tKEYCODE_P\x10,\x12\r\n" +
	"\tKEYCODE_Q\x10-\x12\r\n" +
	"\tKEYCODE_R\x10.\x12\r\n" +
	"\tKEYCODE_S\x10/\x12\r\n" +
	"\tKEYCODE_T\x100\x12\r\n" +
	"\tKEYCODE_U\x101\x12\r\n" +
	"\tKEYCODE_V\x102\x12\r\n" +
	"\tKEYCODE_W\x103\x12\r\n" +
	"\tKEYCODE_X\x104\x12\r\n" +
	"\tKEYCODE_Y\x105\x12\r\n" +
	"\tKEYCODE_Z\x106\x12\x11\n" +
	"\rKEYCODE_COMMA\x107\x12\x12\n" +
	"\x0eKEYCODE_PERIOD\x108\x12\x14\n" +
	"\x10KEYCODE_ALT_LEFT\x109\x12\x15\n" +
	"\x11KEYCODE_ALT_RIGHT\x10:\x12\x16\n" +
	"\x12KEYCODE_SHIFT_LEFT\x10;\x12\x17\n" +
	"\x13KEYCODE_SHIFT_RIGHT\x10<\x12\x0f\n" +
	"\vKEYCODE_TAB\x10=\x12\x11\n" +
	"\rKEYCODE_SPACE\x10>\x12\x0f\n" +
	"\vKEYCODE_SYM\x10?\x12\x14\n" +
	"\x10KEYCODE_EXPLORER\x10@\x12\x14\n" +
	"\x10KEYCODE_ENVELOPE\x10A\x12\x11\n" +
	"\rKEYCODE_ENTER\x10B\x12\x0f\n" +
	"\vKEYCODE_DEL\x10C\x12\x11\n" +
	"\rKEYCODE_GRAVE\x10D\x12\x11\n" +
	"\rKEYCODE_MINUS\x10E\x12\x12\n" +
	"\x0eKEYCODE_EQUALS\x10F\x12\x18\n" +
	"\x14KEYCODE_LEFT_BRACKET\x10G\x12\x19\n" +
	"\x15KEYCODE_RIGHT_BRACKET\x10H\x12\x15\n" +
	"\x11KEYCODE_BACKSLASH\x10I\x12\x15\n" +
	"\x11KEYCODE_SEMICOLON\x10J\x12\x16\n" +
	"\x12KEYCODE_APOSTROPHE\x10K\x12\x11\n" +
	"\rKEYCODE_SLASH\x10L\x12\x0e\n" +
	"\n" +
	"KEYCODE_AT\x10M\x12\x0f\n" +
	"\vKEYCODE_NUM\x10N\x12\x17\n" +
	"\x13KEYCODE_HEADSETHOOK\x10O\x12\x11\n" +
	"\rKEYCODE_FOCUS\x10P\x12\x10\n" +
	"\fKEYCODE_PLUS\x10Q\x12\x10\n" +
	"\fKEYCODE_MENU\x10R\x12\x18\n" +
	"\x14KEYCODE_NOTIFICATION\x10S\x12\x12\n" +
	"\x0eKEYCODE_SEARCH\x10T\x12\x1c\n" +
	"\x18KEYCODE_MEDIA_PLAY_PAUSE\x10U\x12\x16\n" +
	"\x12KEYCODE_MEDIA_STOP\x10V\x12\x16\n" +
	"\x12KEYCODE_MEDIA_NEXT\x10W\x12\x1a\n" +
	"\x16KEYCODE_MEDIA_PREVIOUS\x10X\x12\x18\n" +
	"\x14KEYCODE_MEDIA_REWIND\x10Y\x12\x1e\n" +
	"\x1aKEYCODE_MEDIA_FAST_FORWARD\x10Z\x12\x10\n" +
	"\fKEYCODE_MUTE\x10[\x12\x13\n" +
	"\x0fKEYCODE_PAGE_UP\x10\\\x12\x15\n" +
	"\x11KEYCODE_PAGE_DOWN\x10]\x12\x17\n" +
	"\x13KEYCODE_PICTSYMBOLS\x10^\x12\x1a\n" +
	"\x16KEYCODE_SWITCH_CHARSET\x10_\x12\x14\n" +
	"\x10KEYCODE_BUTTON_A\x10`\x12\x14\n" +
	"\x10KEYCODE_BUTTON_B\x10a\x12\x14\n" +
	"\x10KEYCODE_BUTTON_C\x10b\x12\x14\n" +
	"\x10KEYCODE_BUTTON_X\x10c\x12\x14\n" +
	"\x10KEYCODE_BUTTON_Y\x10d\x12\x14\n" +
	"\x10KEYCODE_BUTTON_Z\x10e\x12\x15\n" +
	"\x11KEYCODE_BUTTON_L1\x10f\x12\x15\n" +
	"\x11KEYCODE_BUTTON_R1\x10g\x12\x15\n" +
	"\x11KEYCODE_BUTTON_L2\x10h\x12\x15\n" +
	"\x11KEYCODE_BUTTON_R2\x10i\x12\x19\n" +
	"\x15KEYCODE_BUTTON_THUMBL\x10j\x12\x19\n" +
	"\x15KEYCODE_BUTTON_THUMBR\x10k\x12\x18\n" +
	"\x14KEYCODE_BUTTON_START\x10l\x12\x19\n" +
	"\x15KEYCODE_BUTTON_SELECT\x10m\x12\x17\n" +
	"\x13KEYCODE_BUTTON_MODE\x10n\x12\x12\n" +
	"\x0eKEYCODE_ESCAPE\x10o\x12\x17\n" +
	"\x13KEYCODE_FORWARD_DEL\x10p\x12\x15\n" +
	"\x11KEYCODE_CTRL_LEFT\x10q\x12\x16\n" +
	"\x12KEYCODE_CTRL_RIGHT\x10r\x12\x15\n" +
	"\x11KEYCODE_CAPS_LOCK\x10s\x12\x17\n" +
	"\x13KEYCODE_SCROLL_LOCK\x10t\x12\x15\n" +
	"\x11KEYCODE_META_LEFT\x10u\x12\x16\n" +
	"\x12KEYCODE_META_RIGHT\x10v\x12\x14\n" +
	"\x10KEYCODE_FUNCTION\x10w\x12\x11\n" +
	"\rKEYCODE_SYSRQ\x10x\x12\x11\n" +
	"\rKEYCODE_BREAK\x10y\x12\x15\n" +
	"\x11KEYCODE_MOVE_HOME\x10z\x12\x14\n" +
	"\x10KEYCODE_MOVE_END\x10{\x12\x12\n" +
	"\x0eKEYCODE_INSERT\x10|\x12\x13\n" +
	"\x0fKEYCODE_FORWARD\x10}\x12\x16\n" +
	"\x12KEYCODE_MEDIA_PLAY\x10~\x12\x17\n" +
	"\x13KEYCODE_MEDIA_PAUSE\x10\x7f\x12\x18\n" +
	"\x13KEYCODE_MEDIA_CLOSE\x10\x80\x01\x12\x18\n" +
	"\x13KEYCODE_MEDIA_EJECT\x10\x81\x01\x12\x19\n" +
	"\x14KEYCODE_MEDIA_RECORD\x10\x82\x01\x12\x0f\n" +
	"\n" +
	"KEYCODE_F1\x10\x83\x01\x12\x0f\n" +
	"\n" +
	"KEYCODE_F2\x10\x84\x01\x12\x0f\n" +
	"\n" +
	"KEYCODE_F3\x10\x85\x01\x12\x0f\n" +
	"\n" +
	"KEYCODE_F4\x10\x86\x01\x12\x0f\n" +
	"\n" +
	"KEYCODE_F5\x10\x87\x01\x12\x0f\n" +
	"\n" +
	"KEYCODE_F6\x10\x88\x01\x12\x0f\n" +
	"\n" +
	"KEYCODE_F7\x10\x89\x01\x12\x0f\n" +
	"\n" +
	"KEYCODE_F8\x10\x8a\x01\x12\x0f\n" +
	"\n" +
	"KEYCODE_F9\x10\x8b\x01\x12\x10\n" +
	"\vKEYCODE_F10\x10\x8c\x01\x12\x10\n" +
	"\vKEYCODE_F11\x10\x8d\x01\x12\x10\n" +
	"\vKEYCODE_F12\x10\x8e\x01\x12\x15\n" +
	"\x10KEYCODE_NUM_LOCK\x10\x8f\x01\x12\x15\n" +
	"\x10KEYCODE_NUMPAD_0\x10\x90\x01\x12\x15\n" +
	"\x10KEYCODE_NUMPAD_1\x10\x91\x01\x12\x15\n" +
	"\x10KEYCODE_NUMPAD_2\x10\x92\x01\x12\x15\n" +
	"\x10KEYCODE_NUMPAD_3\x10\x93\x01\x12\x15\n" +
	"\x10KEYCODE_NUMPAD_4\x10\x94\x01\x12\x15\n" +
	"\x10KEYCODE_NUMPAD_5\x10\x95\x01\x12\x15\n" +
	"\x10KEYCODE_NUMPAD_6\x10\x96\x01\x12\x15\n" +
	"\x10KEYCODE_NUMPAD_7\x10\x97\x01\x12\x15\n" +
	"\x10KEYCODE_NUMPAD_8\x10\x98\x01\x12\x15\n" +
	"\x10KEYCODE_NUMPAD_9\x10\x99\x01\x12\x1a\n" +
	"\x15KEYCODE_NUMPAD_DIVIDE\x10\x9a\x01\x12\x1c\n" +
	"\x17KEYCODE_NUMPAD_MULTIPLY\x10\x9b\x01\x12\x1c\n" +
	"\x17KEYCODE_NUMPAD_SUBTRACT\x10\x9c\x01\x12\x17\n" +
	"\x12KEYCODE_NUMPAD_ADD\x10\x9d\x01\x12\x17\n" +
	"\x12KEYCODE_NUMPAD_DOT\x10\x9e\x01\x12\x19\n" +
	"\x14KEYCODE_NUMPAD_COMMA\x10\x9f\x01\x12\x19\n" +
	"\x14KEYCODE_NUMPAD_ENTER\x10\xa0\x01\x12\x1a\n" +
	"\x15KEYCODE_NUMPAD_EQUALS\x10\xa1\x01\x12\x1e\n" +
	"\x19KEYCODE_NUMPAD_LEFT_PAREN\x10\xa2\x01\x12\x1f\n" +
	"\x1aKEYCODE_NUMPAD_RIGHT_PAREN\x10\xa3\x01\x12\x18\n" +
	"\x13KEYCODE_VOLUME_MUTE\x10\xa4\x01\x12\x11\n" +
	"\fKEYCODE_INFO\x10\xa5\x01\x12\x17\n" +
	"\x12KEYCODE_CHANNEL_UP\x10\xa6\x01\x12\x19\n" +
	"\x14KEYCODE_CHANNEL_DOWN\x10\xa7\x01\x12\x14\n" +
	"\x0fKEYCODE_ZOOM_IN\x10\xa8\x01\x12\x15\n" +
	"\x10KEYCODE_ZOOM_OUT\x10\xa9\x01\x12\x0f\n" +
	"\n" +
	"KEYCODE_TV\x10\xaa\x01\x12\x13\n" +
	"\x0eKEYCODE_WINDOW\x10\xab\x01\x12\x12\n" +
	"\rKEYCODE_GUIDE\x10\xac\x01\x12\x10\n" +
	"\vKEYCODE_DVR\x10\xad\x01\x12\x15\n" +
	"\x10KEYCODE_BOOKMARK\x10\xae\x01\x12\x15\n" +
	"\x10KEYCODE_CAPTIONS\x10\xaf\x01\x12\x15\n" +
	"\x10KEYCODE_SETTINGS\x10\xb0\x01\x12\x15\n" +
	"\x10KEYCODE_TV_POWER\x10\xb1\x01\x12\x15\n" +
	"\x10KEYCODE_TV_INPUT\x10\xb2\x01\x12\x16\n" +
	"\x11KEYCODE_STB_POWER\x10\xb3\x01\x12\x16\n" +
	"\x11KEYCODE_STB_INPUT\x10\xb4\x01\x12\x16\n" +
	"\x11KEYCODE_AVR_POWER\x10\xb5\x01\x12\x16\n" +
	"\x11KEYCODE_AVR_INPUT\x10\xb6\x01\x12\x15\n" +
	"\x10KEYCODE_PROG_RED\x10\xb7\x01\x12\x17\n" +
	"\x12KEYCODE_PROG_GREEN\x10\xb8\x01\x12\x18\n" +
	"\x13KEYCODE_PROG_YELLOW\x10\xb9\x01\x12\x16\n" +
	"\x11KEYCODE_PROG_BLUE\x10\xba\x01\x12\x17\n" +
	"\x12KEYCODE_APP_SWITCH\x10\xbb\x01\x12\x15\n" +
	"\x10KEYCODE_BUTTON_1\x10\xbc\x01\x12\x15\n" +
	"\x10KEYCODE_BUTTON_2\x10\xbd\x01\x12\x15\n" +
	"\x10KEYCODE_BUTTON_3\x10\xbe\x01\x12\x15\n" +
	"\x10KEYCODE_BUTTON_4\x10\xbf\x01\x12\x15\n" +
	"\x10KEYCODE_BUTTON_5\x10\xc0\x01\x12\x15\n" +
	"\x10KEYCODE_BUTTON_6\x10\xc1\x01\x12\x15\n" +
	"\x10KEYCODE_BUTTON_7\x10\xc2\x01\x12\x15\n" +
	"\x10KEYCODE_BUTTON_8\x10\xc3\x01\x12\x15\n" +
	"\x10KEYCODE_BUTTON_9\x10\xc4\x01\x12\x16\n" +
	"\x11KEYCODE_BUTTON_10\x10\xc5\x01\x12\x16\n" +
	"\x11KEYCODE_BUTTON_11\x10\xc6\x01\x12\x16\n" +
	"\x11KEYCODE_BUTTON_12\x10\xc7\x01\x12\x16\n" +
	"\x11KEYCODE_BUTTON_13\x10\xc8\x01\x12\x16\n" +
	"\x11KEYCODE_BUTTON_14\x10\xc9\x01\x12\x16\n" +
	"\x11KEYCODE_BUTTON_15\x10\xca\x01\x12\x16\n" +
	"\x11KEYCODE_BUTTON_16\x10\xcb\x01\x12\x1c\n" +
	"\x17KEYCODE_LANGUAGE_SWITCH\x10\xcc\x01\x12\x18\n" +
	"\x13KEYCODE_MANNER_MODE\x10\xcd\x01\x12\x14\n" +
	"\x0fKEYCODE_3D_MODE\x10\xce\x01\x12\x15\n" +
	"\x10KEYCODE_CONTACTS\x10\xcf\x01\x12\x15\n" +
	"\x10KEYCODE_CALENDAR\x10\xd0\x01\x12\x12\n" +
	"\rKEYCODE_MUSIC\x10\xd1\x01\x12\x17\n" +
	"\x12KEYCODE_CALCULATOR\x10\xd2\x01\x12\x1c\n" +
	"\x17KEYCODE_ZENKAKU_HANKAKU\x10\xd3\x01\x12\x11\n" +
	"\fKEYCODE_EISU\x10\xd4\x01\x12\x15\n" +
	"\x10KEYCODE_MUHENKAN\x10\xd5\x01\x12\x13\n" +
	"\x0eKEYCODE_HENKAN\x10\xd6\x01\x12\x1e\n" +
	"\x19KEYCODE_KATAKANA_HIRAGANA\x10\xd7\x01\x12\x10\n" +
	"\vKEYCODE_YEN\x10\xd8\x01\x12\x0f\n" +
	"\n" +
	"KEYCODE_RO\x10\xd9\x01\x12\x11\n" +
	"\fKEYCODE_KANA\x10\xda\x01\x12\x13\n" +
	"\x0eKEYCODE_ASSIST\x10\xdb\x01\x12\x1c\n" +
	"\x17KEYCODE_BRIGHTNESS_DOWN\x10\xdc\x01\x12\x1a\n" +
	"\x15KEYCODE_BRIGHTNESS_UP\x10\xdd\x01\x12\x1e\n" +
	"\x19KEYCODE_MEDIA_AUDIO_TRACK\x10\xde\x01\x12\x12\n" +
	"\rKEYCODE_SLEEP\x10\xdf\x01\x12\x13\n" +
	"\x0eKEYCODE_WAKEUP\x10\xe0\x01\x12\x14\n" +
	"\x0fKEYCODE_PAIRING\x10\xe1\x01\x12\x1b\n" +
	"\x16KEYCODE_MEDIA_TOP_MENU\x10\xe2\x01\x12\x0f\n" +
	"\n" +
	"KEYCODE_11\x10\xe3\x01\x12\x0f\n" +
	"\n" +
	"KEYCODE_12\x10\xe4\x01\x12\x19\n" +
	"\x14KEYCODE_LAST_CHANNEL\x10\xe5\x01\x12\x1c\n" +
	"\x17KEYCODE_TV_DATA_SERVICE\x10\xe6\x01\x12\x19\n" +
	"\x14KEYCODE_VOICE_ASSIST\x10\xe7\x01\x12\x1d\n" +
	"\x18KEYCODE_TV_RADIO_SERVICE\x10\xe8\x01\x12\x18\n" +
	"\x13KEYCODE_TV_TELETEXT\x10\xe9\x01\x12\x1c\n" +
	"\x17KEYCODE_TV_NUMBER_ENTRY\x10\xea\x01\x12\"\n" +
	"\x1dKEYCODE_TV_TERRESTRIAL_ANALOG\x10\xeb\x01\x12#\n" +
	"\x1eKEYCODE_TV_TERRESTRIAL_DIGITAL\x10\xec\x01\x12\x19\n" +
	"\x14KEYCODE_TV_SATELLITE\x10\xed\x01\x12\x1c\n" +
	"\x17KEYCODE_TV_SATELLITE_BS\x10\xee\x01\x12\x1c\n" +
	"\x17KEYCODE_TV_SATELLITE_CS\x10\xef\x01\x12!\n" +
	"\x1cKEYCODE_TV_SATELLITE_SERVICE\x10\xf0\x01\x12\x17\n" +
	"\x12KEYCODE_TV_NETWORK\x10\xf1\x01\x12\x1d\n" +
	"\x18KEYCODE_TV_ANTENNA_CABLE\x10\xf2\x01\x12\x1c\n" +
	"\x17KEYCODE_TV_INPUT_HDMI_1\x10\xf3\x01\x12\x1c\n" +
	"\x17KEYCODE_TV_INPUT_HDMI_2\x10\xf4\x01\x12\x1c\n" +
	"\x17KEYCODE_TV_INPUT_HDMI_3\x10\xf5\x01\x12\x1c\n" +
	"\x17KEYCODE_TV_INPUT_HDMI_4\x10\xf6\x01\x12!\n" +
	"\x1cKEYCODE_TV_INPUT_COMPOSITE_1\x10\xf7\x01\x12!\n" +
	"\x1cKEYCODE_TV_INPUT_COMPOSITE_2\x10\xf8\x01\x12!\n" +
	"\x1cKEYCODE_TV_INPUT_COMPONENT_1\x10\xf9\x01\x12!\n" +
	"\x1cKEYCODE_TV_INPUT_COMPONENT_2\x10\xfa\x01\x12\x1b\n" +
	"\x16KEYCODE_TV_INPUT_VGA_1\x10\xfb\x01\x12!\n" +
	"\x1cKEYCODE_TV_AUDIO_DESCRIPTION\x10\xfc\x01\x12(\n" +
	"#KEYCODE_TV_AUDIO_DESCRIPTION_MIX_UP\x10\xfd\x01\x12*\n" +
	"%KEYCODE_TV_AUDIO_DESCRIPTION_MIX_DOWN\x10\xfe\x01\x12\x19\n" +
	"\x14KEYCODE_TV_ZOOM_MODE\x10\xff\x01\x12\x1d\n" +
	"\x18KEYCODE_TV_CONTENTS_MENU\x10\x80\x02\x12\"\n" +
	"\x1dKEYCODE_TV_MEDIA_CONTEXT_MENU\x10\x81\x02\x12!\n" +
	"\x1cKEYCODE_TV_TIMER_PROGRAMMING\x10\x82\x02\x12\x11\n" +
	"\fKEYCODE_HELP\x10\x83\x02\x12\x1e\n" +
	"\x19KEYCODE_NAVIGATE_PREVIOUS\x10\x84\x02\x12\x1a\n" +
	"\x15KEYCODE_NAVIGATE_NEXT\x10\x85\x02\x12\x18\n" +
	"\x13KEYCODE_NAVIGATE_IN\x10\x86\x02\x12\x19\n" +
	"\x14KEYCODE_NAVIGATE_OUT\x10\x87\x02\x12\x19\n" +
	"\x14KEYCODE_STEM_PRIMARY\x10\x88\x02\x12\x13\n" +
	"\x0eKEYCODE_STEM_1\x10\x89\x02\x12\x13\n" +
	"\x0eKEYCODE_STEM_2\x10\x8a\x02\x12\x13\n" +
	"\x0eKEYCODE_STEM_3\x10\x8b\x02\x12\x19\n" +
	"\x14KEYCODE_DPAD_UP_LEFT\x10\x8c\x02\x12\x1b\n" +
	"\x16KEYCODE_DPAD_DOWN_LEFT\x10\x8d\x02\x12\x1a\n" +
	"\x15KEYCODE_DPAD_UP_RIGHT\x10\x8e\x02\x12\x1c\n" +
	"\x17KEYCODE_DPAD_DOWN_RIGHT\x10\x8f\x02\x12\x1f\n" +
	"\x1aKEYCODE_MEDIA_SKIP_FORWARD\x10\x90\x02\x12 \n" +
	"\x1bKEYCODE_MEDIA_SKIP_BACKWARD\x10\x91\x02\x12\x1f\n" +
	"\x1aKEYCODE_MEDIA_STEP_FORWARD\x10\x92\x02\x12 \n" +
	"\x1bKEYCODE_MEDIA_STEP_BACKWARD\x10\x93\x02\x12\x17\n" +
	"\x12KEYCODE_SOFT_SLEEP\x10\x94\x02\x12\x10\n" +
	"\vKEYCODE_CUT\x10\x95\x02\x12\x11\n" +
	"\fKEYCODE_COPY\x10\x96\x02\x12\x12\n" +
	"\rKEYCODE_PASTE\x10\x97\x02\x12!\n" +
	"\x1cKEYCODE_SYSTEM_NAVIGATION_UP\x10\x98\x02\x12#\n" +
	"\x1eKEYCODE_SYSTEM_NAVIGATION_DOWN\x10\x99\x02\x12#\n" +
	"\x1eKEYCODE_SYSTEM_NAVIGATION_LEFT\x10\x9a\x02\x12$\n" +
	"\x1fKEYCODE_SYSTEM_NAVIGATION_RIGHT\x10\x9b\x02\x12\x15\n" +
	"\x10KEYCODE_ALL_APPS\x10\x9c\x02\x12\x14\n" +
	"\x0fKEYCODE_REFRESH\x10\x9d\x02\x12\x16\n" +
	"\x11KEYCODE_THUMBS_UP\x10\x9e\x02\x12\x18\n" +
	"\x13KEYCODE_THUMBS_DOWN\x10\x9f\x02\x12\x1b\n" +
	"\x16KEYCODE_PROFILE_SWITCH\x10\xa0\x02\x12\x18\n" +
	"\x13KEYCODE_VIDEO_APP_1\x10\xa1\x02\x12\x18\n" +
	"\x13KEYCODE_VIDEO_APP_2\x10\xa2\x02\x12\x18\n" +
	"\x13KEYCODE_VIDEO_APP_3\x10\xa3\x02\x12\x18\n" +
	"\x13KEYCODE_VIDEO_APP_4\x10\xa4\x02\x12\x18\n" +
	"\x13KEYCODE_VIDEO_APP_5\x10\xa5\x02\x12\x18\n" +
	"\x13KEYCODE_VIDEO_APP_6\x10\xa6\x02\x12\x18\n" +
	"\x13KEYCODE_VIDEO_APP_7\x10\xa7\x02\x12\x18\n" +
	"\x13KEYCODE_VIDEO_APP_8\x10\xa8\x02\x12\x1b\n" +
	"\x16KEYCODE_FEATURED_APP_1\x10\xa9\x02\x12\x1b\n" +
	"\x16KEYCODE_FEATURED_APP_2\x10\xaa\x02\x12\x1b\n" +
	"\x16KEYCODE_FEATURED_APP_3\x10\xab\x02\x12\x1b\n" +
	"\x16KEYCODE_FEATURED_APP_4\x10\xac\x02\x12\x17\n" +
	"\x12KEYCODE_DEMO_APP_1\x10\xad\x02\x12\x17\n" +
	"\x12KEYCODE_DEMO_APP_2\x10\xae\x02\x12\x17\n" +
	"\x12KEYCODE_DEMO_APP_3\x10\xaf\x02\x12\x17\n" +
	"\x12KEYCODE_DEMO_APP_4\x10\xb0\x02*Q\n" +
	"\x0fRemoteDirection\x12\x15\n" +
	"\x11UNKNOWN_DIRECTION\x10\x00\x12\x0e\n" +
	"\n" +
	"START_LONG\x10\x01\x12\f\n" +
	"\bEND_LONG\x10\x02\x12\t\n" +
	"\x05SHORT\x10\x03B4Z2github.com/rafaelmartins/b8r/internal/androidtv/pbb\x06proto3"

var (
	file_remotemessage_proto_rawDescOnce sync.Once
	file_remotemessage_proto_rawDescData []byte
)

func file_remotemessage_proto_rawDescGZIP() []byte {
	file_remotemessage_proto_rawDescOnce.Do(func() {
		file_remotemessage_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_remotemessage_proto_rawDesc), len(file_remotemessage_proto_rawDesc)))
	})
	return file_remotemessage_proto_rawDescData
}

var file_remotemessage_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_remotemessage_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_remotemessage_proto_goTypes = []any{
	(RemoteKeyCode)(0),                      // 0: remote.RemoteKeyCode
	(RemoteDirection)(0),                    // 1: remote.RemoteDirection
	(*RemoteAppLinkLaunchRequest)(nil),      // 2: remote.RemoteAppLinkLaunchRequest
	(*RemoteResetPreferredAudioDevice)(nil), // 3: remote.RemoteResetPreferredAudioDevice
	(*RemoteSetPreferredAudioDevice)(nil),   // 4: remote.RemoteSetPreferredAudioDevice
	(*RemoteAdjustVolumeLevel)(nil),         // 5: remote.RemoteAdjustVolumeLevel
	(*RemoteSetVolumeLevel)(nil),            // 6: remote.RemoteSetVolumeLevel
	(*RemoteStart)(nil),                     // 7: remote.RemoteStart
	(*RemoteVoiceEnd)(nil),                  // 8: remote.RemoteVoiceEnd
	(*RemoteVoicePayload)(nil),              // 9: remote.RemoteVoicePayload
	(*RemoteVoiceBegin)(nil),                // 10: remote.RemoteVoiceBegin
	(*RemoteTextFieldStatus)(nil),           // 11: remote.RemoteTextFieldStatus
	(*RemoteImeShowRequest)(nil),            // 12: remote.RemoteImeShowRequest
	(*RemoteEditInfo)(nil),                  // 13: remote.RemoteEditInfo
	(*RemoteImeBatchEdit)(nil),              // 14: remote.RemoteImeBatchEdit
	(*RemoteAppInfo)(nil),                   // 15: remote.RemoteAppInfo
	(*RemoteImeKeyInject)(nil),              // 16: remote.RemoteImeKeyInject
	(*RemoteKeyInject)(nil),                 // 17: remote.RemoteKeyInject
	(*RemotePingResponse)(nil),              // 18: remote.RemotePingResponse
	(*RemotePingRequest)(nil),               // 19: remote.RemotePingRequest
	(*RemoteSetActive)(nil),                 // 20: remote.RemoteSetActive
	(*RemoteDeviceInfo)(nil),                // 21: remote.RemoteDeviceInfo
	(*RemoteConfigure)(nil),                 // 22: remote.RemoteConfigure
	(*RemoteError)(nil),                     // 23: remote.RemoteError
	(*RemoteMessage)(nil),                   // 24: remote.RemoteMessage
}
var file_remotemessage_proto_depIdxs = []int32{
	11, // 0: remote.RemoteImeShowRequest.remote_text_field_status:type_name -> remote.RemoteTextFieldStatus
	13, // 1: remote.RemoteImeBatchEdit.edit_info:type_name -> remote.RemoteEditInfo
	15, // 2: remote.RemoteImeKeyInject.app_info:type_name -> remote.RemoteAppInfo
	11, // 3: remote.RemoteImeKeyInject.text_field_status:type_name -> remote.RemoteTextFieldStatus
	0,  // 4: remote.RemoteKeyInject.key_code:type_name -> remote.RemoteKeyCode
	1,  // 5: remote.RemoteKeyInject.direction:type_name -> remote.RemoteDirection
	21, // 6: remote.RemoteConfigure.device_info:type_name -> remote.RemoteDeviceInfo
	24, // 7: remote.RemoteError.message:type_name -> remote.RemoteMessage
	22, // 8: remote.RemoteMessage.remote_configure:type_name -> remote.RemoteConfigure
	20, // 9: remote.RemoteMessage.remote_set_active:type_name -> remote.RemoteSetActive
	23, // 10: remote.RemoteMessage.remote_error:type_name -> remote.RemoteError
	19, // 11: remote.RemoteMessage.remote_ping_request:type_name -> remote.RemotePingRequest
	18, // 12: remote.RemoteMessage.remote_ping_response:type_name -> remote.RemotePingResponse
	17, // 13: remote.RemoteMessage.remote_key_inject:type_name -> remote.RemoteKeyInject
	16, // 14: remote.RemoteMessage.remote_ime_key_inject:type_name -> remote.RemoteImeKeyInject
	14, // 15: remote.RemoteMessage.remote_ime_batch_edit:type_name -> remote.RemoteImeBatchEdit
	12, // 16: remote.RemoteMessage.remote_ime_show_request:type_name -> remote.RemoteImeShowRequest
	10, // 17: remote.RemoteMessage.remote_voice_begin:type_name -> remote.RemoteVoiceBegin
	9,  // 18: remote.RemoteMessage.remote_voice_payload:type_name -> remote.RemoteVoicePayload
	8,  // 19: remote.RemoteMessage.remote_voice_end:type_name -> remote.RemoteVoiceEnd
	7,  // 20: remote.RemoteMessage.remote_start:type_name -> remote.RemoteStart
	6,  // 21: remote.RemoteMessage.remote_set_volume_level:type_name -> remote.RemoteSetVolumeLevel
	5,  // 22: remote.RemoteMessage.remote_adjust_volume_level:type_name -> remote.RemoteAdjustVolumeLevel
	4,  // 23: remote.RemoteMessage.remote_set_preferred_audio_device:type_name -> remote.RemoteSetPreferredAudioDevice
	3,  // 24: remote.RemoteMessage.remote_reset_preferred_audio_device:type_name -> remote.RemoteResetPreferredAudioDevice
	2,  // 25: remote.RemoteMessage.remote_app_link_launch_request:type_name -> remote.RemoteAppLinkLaunchRequest
	26, // [26:26] is the sub-list for method output_type
	26, // [26:26] is the sub-list for method input_type
	26, // [26:26] is the sub-list for extension type_name
	26, // [26:26] is the sub-list for extension extendee
	0,  // [0:26] is the sub-list for field type_name
}

func init() { file_remotemessage_proto_init() }
func file_remotemessage_proto_init() {
	if File_remotemessage_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_remotemessage_proto_rawDesc), len(file_remotemessage_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_remotemessage_proto_goTypes,
		DependencyIndexes: file_remotemessage_proto_depIdxs,
		EnumInfos:         file_remotemessage_proto_enumTypes,
		MessageInfos:      file_remotemessage_proto_msgTypes,
	}.Build()
	File_remotemessage_proto = out.File
	file_remotemessage_proto_goTypes = nil
	file_remotemessage_proto_depIdxs = nil
}
